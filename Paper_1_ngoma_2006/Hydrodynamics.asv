% Prof Project under Dr Renganathan
% Paper - 1
% Paper : Ngoma 2006

% Aayush Bhakna
% CH22B008

clear variables;
clc;

%-------------------------------------------------------------------------%

% PARAMETERS

% Zeta Potential at Bottom Plate
zeta1 = -0.012;         % in V

% Zeta Potential at Interface
zeta2 = -0.012;         % in V

% Permittivity of Vacuum
eps_nott = 8.854e-12;   % in C m^-1 V^-1

% Dimensionless Dielectric Constant
eps = 80;

% Valence of Ions
z_nott = 1;

% Ionic Number Conc in Bulk Solution
n_inf = 6.022e20;       % in m^-3

% Length of Plates ( X - axis )
L = 0.02;               % in m

% Distance between Plates ( Y - axis )
h = 35e-6;              % in m

% Height of Interface
h1 = 17e-6;             % in m

% Elementary charge in Coulombs
e = 1.6022e-19;

% External Electric Field in V/m
E = 5e4;

% Boltzmann Constant in J/K
k_b = 1.38065e-23;

% Temprature in Kelvin
T = 300; 

% Reference Velocity in m/s
u_nott = 1;

% Grid Size
N = 100;

% Viscosity of Conducting Fluid ( Bottom ) in Pa*s
mu = 0.001;

% Ratio of Viscosity
alpha = 10;

% Pressure Difference in pascals
del_p = 25e3;
Px = del_p / L;

%-------------------------------------------------------------------------%

% DIMENSIONLESS FORM

% Height of Interface
h1_star = h1 / h;

% Dybe-Heckel Parameter
kappa = z_nott * e * (( (2 * n_inf) / (eps * eps_nott * k_b * T) )^0.5);
K = kappa * h;

% Elementary Thermal Voltage
phi_T = k_b * T / (z_nott * e);

zeta1_star = zeta1 / phi_T;
zeta2_star = zeta2 / phi_T;

% Helmholtzâ€“Smoluchowski electroosmotic velocity
u_h = E * eps * eps_nott * k_b * T / ( z_nott * e * mu );

C0 = (h^2) * Px / ( mu * u_nott );
C1 = u_h / u_nott;
C2 = (h^2) * Px / ( alpha * mu * u_nott );

%-------------------------------------------------------------------------%

% ELECTRIC POTENTIAL

resultType = "numerical";
phi_star = dimElecPotential(K, h1_star, zeta1_star, zeta2_star, ...
    N, resultType);

%-------------------------------------------------------------------------%

% CREATING MESH FOR SYSTEM

% Fluid 1
ymesh1 = linspace(0, h1_star, N);
del_y1 = ymesh1(2) - ymesh1(1);

% Fluid 2
ymesh2 = linspace(h1_star, 1, N);
del_y2 = ymesh2(2) - ymesh2(1);

% Combining the two regions
ymesh = [ymesh1 ymesh2(2:end)];
C3 = alpha / ( del_y2 / del_y1 );

% Note : ymesh2(1) was ignored as its already represented by ymesh1(end)

%-------------------------------------------------------------------------%

% FINITE DIFFERENCE METHOD

Nn = length( ymesh );
A = zeros( Nn, Nn );
b = zeros( Nn, 1 );

% Fluid 1 : Navier Stokes
for i = 2:(N-1)
    A(i, i-1) = 1;
    A(i, i) = -2;
    A(i, i+1) = 1;
    b(i) = (C1 * phi_star(i) * ((K * del_y1)^2)) - (C0 * (del_y1^2));
end

% Fluid 1 : Boundary Cond
A(1, 1) = 1;
b(1) = 0;

% Fluid 2 : Navier Stokes
for i = (N+1):(N-1)
    A(i, i-1) = 1;
    A(i, i) = -2;
    A(i, i+1) = 1;
    b(i) = (C1 * phi_star(i) * ((K * del_y1)^2)) - (C0 * (del_y1^2));
end

% Fluid 2 : Boundary Cond
A(1, 1) = 1;
b(1) = 0;

%-------------------------------------------------------------------------%