(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    201826,       4024]
NotebookOptionsPosition[    197828,       3954]
NotebookOutlinePosition[    198225,       3970]
CellTagsIndexPosition[    198182,       3967]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"\[Omega]", " ", "=", " ", 
  RowBox[{"Rectangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "l"}], ",", " ", "0"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "h1"}], "}"}]}], "]"}]}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"bbc40e93-84e7-46c4-adf3-00300a45c6ae"],

Cell[BoxData[
 RowBox[{"Rectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "l"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "h1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.951151754268134*^9, 3.951152481317801*^9, 
  3.9511536021520157`*^9, 3.951159412106094*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ae36c679-2ccf-4bfe-af14-caa0f8ff02e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"leqn", " ", "=", " ", 
  RowBox[{
   RowBox[{"Laplacian", "[", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"z", ",", " ", "y"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"z", ",", "y"}], "}"}]}], "]"}], " ", "==", " ", 
   "0"}]}]], "Input",
 CellChangeTimes->{{3.951151768230516*^9, 3.951151834691083*^9}, {
  3.9511593951146183`*^9, 3.951159406871347*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"0027f721-3fe9-49dd-931b-13fac63a0186"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Psi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"0", ",", "2"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"z", ",", "y"}], "]"}], "+", 
   RowBox[{
    SuperscriptBox["\[Psi]", 
     TagBox[
      RowBox[{"(", 
       RowBox[{"2", ",", "0"}], ")"}],
      Derivative],
     MultilineFunction->None], "[", 
    RowBox[{"z", ",", "y"}], "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.951151838871423*^9, 3.951152479907757*^9, 
  3.951153603850596*^9, 3.9511594090465393`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"a81a6e41-8366-44de-9f1c-e474cf86b536"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bcond", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"z", ",", "0"}], "]"}], "==", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Zb"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{
       RowBox[{"-", "l"}], ",", "y"}], "]"}], "==", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Zs"}]}], ",", " ", 
    RowBox[{
     RowBox[{"\[Psi]", "[", 
      RowBox[{"l", ",", "y"}], "]"}], "==", 
     RowBox[{
      RowBox[{"-", "\[Gamma]"}], " ", "Zs"}]}], ",", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Psi]", "[", 
          RowBox[{"z", ",", "y"}], "]"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1"}], "}"}]}], "]"}], " ", "/.", " ", 
       RowBox[{"y", "->", "h1"}]}], ")"}], "==", "0"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.951151851177051*^9, 3.9511519687382393`*^9}, {
   3.951152416209096*^9, 3.951152469929105*^9}, {3.9511535935846167`*^9, 
   3.9511536166096287`*^9}, {3.951159433525889*^9, 3.951159544478105*^9}, {
   3.9511595915394707`*^9, 3.951159595428677*^9}, {3.951159630450267*^9, 
   3.9511596458684607`*^9}, 3.951159698295779*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"8d54f2e8-ec6f-40fe-882d-47a4a0494dfd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"z", ",", "0"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "Zb"}], " ", "\[Gamma]"}]}], ",", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{
      RowBox[{"-", "l"}], ",", "y"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "Zs"}], " ", "\[Gamma]"}]}], ",", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"l", ",", "y"}], "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{"-", "Zs"}], " ", "\[Gamma]"}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Psi]", 
      TagBox[
       RowBox[{"(", 
        RowBox[{"0", ",", "1"}], ")"}],
       Derivative],
      MultilineFunction->None], "[", 
     RowBox[{"z", ",", "h1"}], "]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.951151969327251*^9, 3.9511524761474648`*^9, 
  3.951153618436236*^9, 3.951159648561328*^9, 3.9511596998761272`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"6540a261-dcce-4f54-84f7-04bf2fdc9733"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{
   RowBox[{"DSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"leqn", ",", " ", "bcond"}], "}"}], ",", " ", 
     RowBox[{"\[Phi]", "[", 
      RowBox[{"z", ",", "y"}], "]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"z", ",", "y"}], "}"}], "\[Element]", "\[Omega]"}]}], "]"}], "//",
    "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.951151975672141*^9, 3.9511521202045727`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"45df754a-815b-4e19-95f5-79ae8019b979"],

Cell[BoxData[
 RowBox[{"DSolveValue", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "y"}], "]"}], "+", 
       RowBox[{
        SuperscriptBox["\[Psi]", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"z", ",", "y"}], "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Zb", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"z", ",", "0"}], "]"}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Zs", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{
           RowBox[{"-", "l"}], ",", "y"}], "]"}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Zs", " ", "\[Gamma]"}], "+", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"l", ",", "y"}], "]"}]}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Psi]", 
          TagBox[
           RowBox[{"(", 
            RowBox[{"0", ",", "1"}], ")"}],
           Derivative],
          MultilineFunction->None], "[", 
         RowBox[{"z", ",", "h1"}], "]"}], "\[Equal]", "0"}]}], "}"}]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SqrtBox["k"]}], " ", "z"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          SqrtBox["k"], " ", "z"}]], " ", 
        TemplateBox[{"1"},
         "C"]}], "+", 
       TemplateBox[{"2"},
        "C"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        TemplateBox[{"1"},
         "C"], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
       RowBox[{
        TemplateBox[{"2"},
         "C"], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"z", ",", "y"}], "}"}], "\[Element]", 
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "l"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "h1"}], "}"}]}], "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.951152121058221*^9, 3.951152483817032*^9, {3.9511536110017023`*^9, 
   3.951153622454911*^9}, 3.951159667634066*^9, 3.951159704682829*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"899b1660-2b15-4604-aacf-56436baf473e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pde", "=", 
   RowBox[{
    RowBox[{"Laplacian", "[", 
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcLeft", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"1", ",", "0"}], "]"}], "[", "\[Psi]", "]"}], "[", 
     RowBox[{"0", ",", "y"}], "]"}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcRight", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"l", ",", "y"}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zs"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcTop", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Derivative", "[", 
       RowBox[{"0", ",", "1"}], "]"}], "[", "\[Psi]", "]"}], "[", 
     RowBox[{"x", ",", "h1"}], "]"}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcBottom", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", "0"}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zb"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bc", "=", 
   RowBox[{"{", 
    RowBox[{"bcLeft", ",", "bcRight", ",", "bcTop", ",", "bcBottom"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{"sol", "=", 
  RowBox[{"DSolveValue", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pde", ",", "bc"}], "}"}], ",", 
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0", "<=", "x", "<=", "l"}], "&&", 
       RowBox[{"0", "<=", "y", "<=", "h1"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]true1", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "=", 
  RowBox[{
   RowBox[{"\[Psi]", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", "/.", " ", "sol"}]}]}], "Input",
 CellChangeTimes->{{3.951152543826849*^9, 3.951152668991765*^9}, {
   3.951152739782089*^9, 3.951152829421422*^9}, {3.951152869980891*^9, 
   3.9511528848761787`*^9}, {3.951152960863152*^9, 3.951152993144199*^9}, {
   3.9511536412490473`*^9, 3.951153652292346*^9}, {3.951156733962927*^9, 
   3.951156755650683*^9}, 3.951156893703988*^9, 3.951156957247278*^9, {
   3.951159978316724*^9, 3.951160125820169*^9}, 3.951160258096676*^9, {
   3.951160308813705*^9, 3.951160331668651*^9}, {3.9511603872137747`*^9, 
   3.9511603876713448`*^9}, {3.9511648841914463`*^9, 3.951164894915968*^9}, {
   3.9511887652106028`*^9, 3.951188765660976*^9}, {3.9511889067874393`*^9, 
   3.951188908465468*^9}},ExpressionUUID->"30e99efe-e77f-488f-948e-\
ecfba9baf28d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "\[Rule]", 
    RowBox[{
     TemplateBox[{
       FractionBox[
        RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
           RowBox[{"K", "[", "1", "]"}]], " ", "Zb", " ", "\[Gamma]", " ", 
          RowBox[{"Cos", "[", 
            FractionBox[
             RowBox[{"\[Pi]", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "l"}]], "]"}], " ", 
          RowBox[{"Cosh", "[", 
            FractionBox[
             RowBox[{"\[Pi]", " ", 
               RowBox[{"(", 
                 RowBox[{"h1", "-", "y"}], ")"}], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "l"}]], "]"}], " ", 
          RowBox[{"Sech", "[", 
            FractionBox[
             RowBox[{"h1", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "l"}]], "]"}]}], 
        RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"K", "[", "1", "]"}]}]}]], 
       RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "+", 
     TemplateBox[{
       RowBox[{"-", 
         FractionBox[
          RowBox[{"4", " ", "Zs", " ", "\[Gamma]", " ", 
            RowBox[{"Cosh", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", "x", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
               RowBox[{"2", " ", "h1"}]], "]"}], " ", 
            RowBox[{"Sech", "[", 
              FractionBox[
               RowBox[{"l", " ", "\[Pi]", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
               RowBox[{"2", " ", "h1"}]], "]"}], " ", 
            RowBox[{"Sin", "[", 
              FractionBox[
               RowBox[{"\[Pi]", " ", "y", " ", 
                 RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
               RowBox[{"2", " ", "h1"}]], "]"}]}], 
          RowBox[{
            RowBox[{"-", "\[Pi]"}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", 
              RowBox[{"K", "[", "1", "]"}]}]}]]}], 
       RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
      "InactiveSum",
      DisplayFunction->(RowBox[{
         UnderoverscriptBox[
          StyleBox["\[Sum]", "Inactive"], 
          RowBox[{#2, "=", #3}], #4], #}]& ),
      InterpretationFunction->(RowBox[{
         RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
         RowBox[{#, ",", 
           RowBox[{"{", 
             RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.95115283104776*^9, {3.95115287285524*^9, 3.951152888311371*^9}, {
   3.9511529642913218`*^9, 3.951152993977034*^9}, {3.9511536338038588`*^9, 
   3.951153654266717*^9}, 3.951156758461125*^9, 3.9511568970102587`*^9, 
   3.951156960497779*^9, 3.951160140537815*^9, 3.951160455882052*^9, 
   3.951160577562241*^9, 3.951165020733327*^9, 3.951188894848762*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"8bea8127-41de-400d-9348-f5bda6b5fcf8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
     FractionBox[
      RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], 
         RowBox[{"K", "[", "1", "]"}]], " ", "Zb", " ", "\[Gamma]", " ", 
        RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", "x", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                   RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
           RowBox[{"2", " ", "l"}]], "]"}], " ", 
        RowBox[{"Cosh", "[", 
          FractionBox[
           RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
               RowBox[{"h1", "-", "y"}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                   RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
           RowBox[{"2", " ", "l"}]], "]"}], " ", 
        RowBox[{"Sech", "[", 
          FractionBox[
           RowBox[{"h1", " ", "\[Pi]", " ", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"2", " ", 
                   RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
           RowBox[{"2", " ", "l"}]], "]"}]}], 
      RowBox[{
        RowBox[{"-", "\[Pi]"}], "+", 
        RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"K", "[", "1", "]"}]}]}]], 
     RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "+", 
   TemplateBox[{
     RowBox[{"-", 
       FractionBox[
        RowBox[{"4", " ", "Zs", " ", "\[Gamma]", " ", 
          RowBox[{"Cosh", "[", 
            FractionBox[
             RowBox[{"\[Pi]", " ", "x", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "h1"}]], "]"}], " ", 
          RowBox[{"Sech", "[", 
            FractionBox[
             RowBox[{"l", " ", "\[Pi]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "h1"}]], "]"}], " ", 
          RowBox[{"Sin", "[", 
            FractionBox[
             RowBox[{"\[Pi]", " ", "y", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"K", "[", "1", "]"}]}]}], ")"}]}], 
             RowBox[{"2", " ", "h1"}]], "]"}]}], 
        RowBox[{
          RowBox[{"-", "\[Pi]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"K", "[", "1", "]"}]}]}]]}], 
     RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
    "InactiveSum",
    DisplayFunction->(RowBox[{
       UnderoverscriptBox[
        StyleBox["\[Sum]", "Inactive"], 
        RowBox[{#2, "=", #3}], #4], #}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
       RowBox[{#, ",", 
         RowBox[{"{", 
           RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.95115283104776*^9, {3.95115287285524*^9, 3.951152888311371*^9}, {
   3.9511529642913218`*^9, 3.951152993977034*^9}, {3.9511536338038588`*^9, 
   3.951153654266717*^9}, 3.951156758461125*^9, 3.9511568970102587`*^9, 
   3.951156960497779*^9, 3.951160140537815*^9, 3.951160455882052*^9, 
   3.951160577562241*^9, 3.951165020733327*^9, 3.951188894850195*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"ab5958d8-d1ea-40db-901b-e9d023eb5906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", " ", "=", " ", "1000"}], "\[IndentingNewLine]", 
 RowBox[{"\[Lambda]m", "=", 
  RowBox[{"Pi", " ", "*", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "m"}], "-", "1"}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "l"}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "[", 
   RowBox[{"x", ",", " ", "y"}], "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Lambda]m", "*", "x"}], "]"}], " ", "*", " ", 
    RowBox[{"Cosh", "[", 
     RowBox[{"\[Lambda]m", "*", 
      RowBox[{"(", 
       RowBox[{"h1", "-", "y"}], ")"}]}], "]"}], "*", 
    RowBox[{"Sech", "[", 
     RowBox[{"\[Lambda]m", "*", "h1"}], "]"}]}], " ", "//", " ", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{"val", " ", "=", " ", 
  RowBox[{"Sech", "[", 
   RowBox[{"1999", " ", "Pi"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.951188954599577*^9, 3.95118921736401*^9}, {
  3.951189307075655*^9, 3.95118931317598*^9}, {3.9511893915405893`*^9, 
  3.951189429254651*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"7c34c85a-f8ce-4941-b0e8-0eebb91c0bd3"],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{{3.951189125950218*^9, 3.951189156020301*^9}, 
   3.951189190607141*^9, 3.951189220688767*^9, 3.951189313927102*^9, {
   3.9511894196018333`*^9, 3.9511894310906076`*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"8e09e682-2e1c-476f-bca2-439111996ff8"],

Cell[BoxData[
 FractionBox[
  RowBox[{"1999", " ", "\[Pi]"}], 
  RowBox[{"2", " ", "l"}]]], "Output",
 CellChangeTimes->{{3.951189125950218*^9, 3.951189156020301*^9}, 
   3.951189190607141*^9, 3.951189220688767*^9, 3.951189313927102*^9, {
   3.9511894196018333`*^9, 3.951189431091628*^9}},
 CellLabel->"Out[32]=",ExpressionUUID->"52037a75-3e07-4311-adbb-af37e43d776d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   FractionBox[
    RowBox[{"1999", " ", "\[Pi]", " ", "x"}], 
    RowBox[{"2", " ", "l"}]], "]"}], " ", 
  RowBox[{"Cosh", "[", 
   FractionBox[
    RowBox[{"1999", " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{"h1", "-", "y"}], ")"}]}], 
    RowBox[{"2", " ", "l"}]], "]"}], " ", 
  RowBox[{"Sech", "[", 
   FractionBox[
    RowBox[{"1999", " ", "h1", " ", "\[Pi]"}], 
    RowBox[{"2", " ", "l"}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.951189125950218*^9, 3.951189156020301*^9}, 
   3.951189190607141*^9, 3.951189220688767*^9, 3.951189313927102*^9, {
   3.9511894196018333`*^9, 3.951189431092614*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"2e0f1197-7981-4b44-bdb7-e18be54db7fe"],

Cell[BoxData[
 RowBox[{"Sech", "[", 
  RowBox[{"1999", " ", "\[Pi]"}], "]"}]], "Output",
 CellChangeTimes->{{3.951189125950218*^9, 3.951189156020301*^9}, 
   3.951189190607141*^9, 3.951189220688767*^9, 3.951189313927102*^9, {
   3.9511894196018333`*^9, 3.951189431093553*^9}},
 CellLabel->"Out[34]=",ExpressionUUID->"c6d6df8d-ad11-46ed-a25e-de34095692c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pde", "=", 
   RowBox[{
    RowBox[{"Laplacian", "[", 
     RowBox[{
      RowBox[{"\[Psi]", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcLeft", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"0", ",", "y"}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zs"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcRight", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "*", "l"}], ")"}], ",", "y"}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zs"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcTop", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", 
      RowBox[{"(", 
       RowBox[{"2", "*", "h1"}], ")"}]}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zb"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bcBottom", "=", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"x", ",", "0"}], "]"}], "==", 
    RowBox[{
     RowBox[{"-", "\[Gamma]"}], "*", "Zb"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bc", "=", 
   RowBox[{"{", 
    RowBox[{"bcLeft", ",", "bcRight", ",", "bcTop", ",", "bcBottom"}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pde", ",", "bc"}], "}"}], ",", "\[Psi]", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{"Assumptions", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<=", "x", "<=", 
         RowBox[{"(", 
          RowBox[{"2", "*", "l"}], ")"}]}], "&&", 
        RowBox[{"0", "<=", "y", "<=", 
         RowBox[{"(", 
          RowBox[{"2", "*", "h1"}], ")"}]}]}], "}"}]}]}], "]"}], " ", "//", 
   " ", "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Psi]true2", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{
      RowBox[{"x", "+", "l"}], ",", "y"}], "]"}], " ", "/.", " ", "sol"}], "//",
    " ", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{
  3.951153691620989*^9, {3.9511538343838997`*^9, 3.951153954057971*^9}, {
   3.951155146195788*^9, 3.9511551624311237`*^9}, {3.951155200804744*^9, 
   3.951155284065971*^9}, {3.951155576194601*^9, 3.95115558401469*^9}, {
   3.951158285479981*^9, 3.951158286197949*^9}, {3.9511601618904333`*^9, 
   3.951160197383353*^9}, {3.951163232850539*^9, 3.951163339881168*^9}, {
   3.951163466229692*^9, 3.9511634705498753`*^9}, {3.951163569012845*^9, 
   3.951163579439213*^9}, {3.951163631393264*^9, 3.9511636451896467`*^9}, {
   3.9511640074302893`*^9, 3.951164072177726*^9}, 3.9511641023765097`*^9, 
   3.951164890208441*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"2b140737-9e17-4d03-b8a4-0b8fefb683a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Psi]", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], ",", 
      TemplateBox[{
        RowBox[{"(", 
          RowBox[{
            FractionBox[
             RowBox[{"2", " ", "Zs", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"Sign", "[", "h1", "]"}]], "]"}]}], ")"}], " ", 
               RowBox[{"Csch", "[", 
                 FractionBox[
                  RowBox[{"l", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], "h1"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "y", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}], " ", 
               RowBox[{"Sinh", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "l"}], "-", "x"}], ")"}], " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}]}], 
             RowBox[{"\[Pi]", " ", 
               RowBox[{"K", "[", "1", "]"}]}]], "+", 
            FractionBox[
             RowBox[{"2", " ", "Zs", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"Sign", "[", "h1", "]"}]], "]"}]}], ")"}], " ", 
               RowBox[{"Csch", "[", 
                 FractionBox[
                  RowBox[{"l", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], "h1"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "y", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}], " ", 
               RowBox[{"Sinh", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "x", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}]}], 
             RowBox[{"\[Pi]", " ", 
               RowBox[{"K", "[", "1", "]"}]}]], "+", 
            FractionBox[
             RowBox[{"2", " ", "Zb", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"Sign", "[", "l", "]"}]], "]"}]}], ")"}], " ", 
               RowBox[{"Csch", "[", 
                 FractionBox[
                  RowBox[{"h1", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], "l"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "x", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "l"}]], "]"}], " ", 
               RowBox[{"Sinh", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "h1"}], "-", "y"}], ")"}], " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "l"}]], "]"}]}], 
             RowBox[{"\[Pi]", " ", 
               RowBox[{"K", "[", "1", "]"}]}]], "+", 
            FractionBox[
             RowBox[{"2", " ", "Zb", " ", "\[Gamma]", " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"Cos", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"Sign", "[", "l", "]"}]], "]"}]}], ")"}], " ", 
               RowBox[{"Csch", "[", 
                 FractionBox[
                  RowBox[{"h1", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], "l"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "x", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "l"}]], "]"}], " ", 
               RowBox[{"Sinh", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "y", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "l"}]], "]"}]}], 
             RowBox[{"\[Pi]", " ", 
               RowBox[{"K", "[", "1", "]"}]}]]}], ")"}], 
        RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
       "InactiveSum",
       DisplayFunction->(RowBox[{
          UnderoverscriptBox[
           StyleBox["\[Sum]", "Inactive"], 
           RowBox[{#2, "=", #3}], #4], #}]& ),
       InterpretationFunction->(RowBox[{
          RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
          RowBox[{#, ",", 
            RowBox[{"{", 
              RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.95115395752064*^9, 3.951155164223262*^9, {3.951155205141571*^9, 
   3.9511552516485977`*^9}, 3.95115528673565*^9, 3.95115558520982*^9, 
   3.951158290933263*^9, {3.951160164088944*^9, 3.951160173673027*^9}, 
   3.951160211839307*^9, 3.9511632976351957`*^9, 3.9511633459714108`*^9, 
   3.951163479362075*^9, 3.951163677352662*^9, 3.9511640332388783`*^9, {
   3.951164082167858*^9, 3.951164105191226*^9}, 3.951165022261352*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"b87e035c-9991-4e7e-b9e5-aeb075ea0fe9"],

Cell[BoxData[
 RowBox[{"{", 
  TemplateBox[{
    RowBox[{"-", 
      FractionBox[
       RowBox[{"4", " ", "\[Gamma]", " ", 
         RowBox[{"(", 
           RowBox[{
             RowBox[{"Zs", " ", 
               RowBox[{"Cosh", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "x", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}], " ", 
               RowBox[{"Sech", "[", 
                 FractionBox[
                  RowBox[{"l", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", "y", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "h1"}]], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"Sign", "[", "h1", "]"}]}]], "]"}], "2"]}], "+", 
             RowBox[{"Zb", " ", 
               RowBox[{"Csch", "[", 
                 FractionBox[
                  RowBox[{"h1", " ", "\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], "l"], "]"}], " ", 
               RowBox[{"Sin", "[", 
                 FractionBox[
                  RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{"l", "+", "x"}], ")"}], " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                  RowBox[{"2", " ", "l"}]], "]"}], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", 
                  FractionBox[
                   RowBox[{"\[Pi]", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                   RowBox[{"2", " ", 
                    RowBox[{"Sign", "[", "l", "]"}]}]], "]"}], "2"], " ", 
               RowBox[{"(", 
                 RowBox[{
                   RowBox[{"Sinh", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "h1"}], "-", "y"}], ")"}], " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"2", " ", "l"}]], "]"}], "+", 
                   RowBox[{"Sinh", "[", 
                    FractionBox[
                    RowBox[{"\[Pi]", " ", "y", " ", 
                    RowBox[{"K", "[", "1", "]"}]}], 
                    RowBox[{"2", " ", "l"}]], "]"}]}], ")"}]}]}], ")"}]}], 
       RowBox[{"\[Pi]", " ", 
         RowBox[{"K", "[", "1", "]"}]}]]}], 
    RowBox[{"K", "[", "1", "]"}], "1", "\[Infinity]"},
   "InactiveSum",
   DisplayFunction->(RowBox[{
      UnderoverscriptBox[
       StyleBox["\[Sum]", "Inactive"], 
       RowBox[{#2, "=", #3}], #4], #}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Sum", "]"}], "[", 
      RowBox[{#, ",", 
        RowBox[{"{", 
          RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "}"}]], "Output",\

 CellChangeTimes->{
  3.95115395752064*^9, 3.951155164223262*^9, {3.951155205141571*^9, 
   3.9511552516485977`*^9}, 3.95115528673565*^9, 3.95115558520982*^9, 
   3.951158290933263*^9, {3.951160164088944*^9, 3.951160173673027*^9}, 
   3.951160211839307*^9, 3.9511632976351957`*^9, 3.9511633459714108`*^9, 
   3.951163479362075*^9, 3.951163677352662*^9, 3.9511640332388783`*^9, {
   3.951164082167858*^9, 3.951164105191226*^9}, 3.951165027533565*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"c317331a-5d19-447a-a8e9-6ddd5aa14637"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SameQ", "[", 
  RowBox[{
   RowBox[{"\[Psi]true1", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"\[Psi]true2", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.951165040243607*^9, 3.951165057130851*^9}, {
  3.9511651376644993`*^9, 3.951165152091811*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"f5fdb0c3-5f53-4dd5-8b69-d7b41954d1d6"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.951165153747333*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"3ab44587-e7a5-4ca0-98a2-a92a1a0b47db"]
}, Open  ]],

Cell[BoxData[""], "Input",ExpressionUUID->"e914330b-f801-4da8-87a5-98730488f99c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]", "[", 
   RowBox[{"z", ",", " ", "y"}], "]"}], " ", "=", " ", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", 
    TagBox[GridBox[{
       {
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{
               SqrtBox[
                RowBox[{"1", "+", 
                 RowBox[{
                  SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
              "De"]], " ", "c1"}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                SqrtBox[
                 RowBox[{"1", "+", 
                  RowBox[{
                   SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
               "De"]}]], " ", "c2"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"c3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
           RowBox[{"c4", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Column], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"z", ",", " ", "y"}], "]"}], "==", "Zb"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"y", "==", "0"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"-", "l"}], "<=", "z", "<=", "l"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"z", ",", " ", "y"}], "]"}], "==", "Zs"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"z", "==", 
      RowBox[{"-", "l"}]}], " ", "&&", " ", 
     RowBox[{"0", "<", "y", "<", "h1"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"z", ",", " ", "y"}], "]"}], "==", "Zs"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"z", "==", "l"}], " ", "&&", " ", 
     RowBox[{"0", "<", "y", "<", "h1"}]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Phi]", "[", 
      RowBox[{"z", ",", " ", "y"}], "]"}], "==", "Zint"}], " ", "/.", " ", 
    RowBox[{
     RowBox[{"y", "==", "h1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"-", "l"}], "<=", "z", "<=", "l"}]}]}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"c1", ",", " ", "c2", ",", " ", "c3", ",", " ", "c4"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.951155318099246*^9, 3.951155329959607*^9}, {
  3.951155360265636*^9, 3.951155367770668*^9}, {3.95115543602522*^9, 
  3.951155522353525*^9}, {3.951155606765545*^9, 3.951155675241866*^9}, {
  3.95115571162353*^9, 3.951155749680678*^9}, {3.951155795439842*^9, 
  3.951155811295768*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"a5d1ea6c-52d8-44e9-82fc-b07df04d8155"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], "De"]}]]}],
      "+", 
     RowBox[{"c1", " ", 
      SuperscriptBox["\[ExponentialE]", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{
            SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], "De"]]}]}], 
    ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"c3", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
     RowBox[{"c4", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.951155676641038*^9, {3.9511557535796328`*^9, 3.9511557561797047`*^9}, 
   3.951155813379389*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"9d4a26db-d777-4767-8e5e-550715b8a2a3"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"y\\\", \
\\\"\[Equal]\\\", \\\"0\\\"}], \\\"&&\\\", RowBox[{RowBox[{\\\"-\\\", \\\"l\\\
\"}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\[LessEqual]\\\", \\\"l\\\"}]}], \
\\\"}\\\"}]\\) is neither a list of replacement rules nor a valid dispatch \
table, and so cannot be used for replacing.\"", 2, 70, 6, 
   31232169244055626767, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.951155676685377*^9, {3.951155753581149*^9, 3.951155756181074*^9}, 
   3.951155813407642*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"8d89bdf5-271f-4fa8-b7a1-9fbff8b15e61"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"z\\\", \
\\\"\[Equal]\\\", RowBox[{\\\"-\\\", \\\"l\\\"}]}], \\\"&&\\\", RowBox[{\\\"0\
\\\", \\\"<\\\", \\\"y\\\", \\\"<\\\", \\\"h1\\\"}]}], \\\"}\\\"}]\\) is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing.\"", 2, 70, 7, 31232169244055626767, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.951155676685377*^9, {3.951155753581149*^9, 3.951155756181074*^9}, 
   3.95115581341223*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"3f9ffa46-c6d9-49a1-a7d1-a68670a83da4"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll", "reps", 
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"z\\\", \
\\\"\[Equal]\\\", \\\"l\\\"}], \\\"&&\\\", RowBox[{\\\"0\\\", \\\"<\\\", \
\\\"y\\\", \\\"<\\\", \\\"h1\\\"}]}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"", 2, 70, 8, 31232169244055626767, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.951155676685377*^9, {3.951155753581149*^9, 3.951155756181074*^9}, 
   3.951155813413889*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"9479e808-e32d-4bda-a955-73b49b4c7393"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 70, 9, 31232169244055626767, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.951155676685377*^9, {3.951155753581149*^9, 3.951155756181074*^9}, 
   3.951155813415389*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"9a2895a9-bee2-4b01-9817-3fd540f219b2"],

Cell[BoxData[
 TemplateBox[{
  "Solve", "nonopt", 
   "\"Options expected (instead of \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"c1\
\\\", \\\",\\\", \\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"c4\\\"}], \
\\\"}\\\"}]\\)) beyond position \\!\\(\\*RowBox[{\\\"4\\\"}]\\) in \
\\!\\(\\*RowBox[{\\\"Solve\\\", \\\"[\\\", RowBox[{RowBox[{RowBox[{RowBox[{\\\
\"{\\\", RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c2\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c1\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c3\\\", \\\" \\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c4\\\", \
\\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"}\\\"}], \\\"\[Equal]\\\", \\\"Zb\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\
\\\", RowBox[{RowBox[{\\\"y\\\", \\\"\[Equal]\\\", \\\"0\\\"}], \\\"&&\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"l\\\"}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\
\[LessEqual]\\\", \\\"l\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\
\", RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c2\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c1\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c3\\\", \\\" \\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c4\\\", \
\\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"}\\\"}], \\\"\[Equal]\\\", \\\"Zs\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\
\\\", RowBox[{RowBox[{\\\"z\\\", \\\"\[Equal]\\\", RowBox[{\\\"-\\\", \\\"l\\\
\"}]}], \\\"&&\\\", RowBox[{\\\"0\\\", \\\"<\\\", \\\"y\\\", \\\"<\\\", \
\\\"h1\\\"}]}]}], \\\",\\\", RowBox[{RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c2\\\", \\\" \\\", \
RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c1\\\", \
\\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \
\\\", RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"c3\\\", \\\" \\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c4\\\", \
\\\" \\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \
\\\"}\\\"}], \\\"\[Equal]\\\", \\\"Zs\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\
\\\", RowBox[{RowBox[{\\\"z\\\", \\\"\[Equal]\\\", \\\"l\\\"}], \\\"&&\\\", \
RowBox[{\\\"0\\\", \\\"<\\\", \\\"y\\\", \\\"<\\\", \\\"h1\\\"}]}]}], \\\",\\\
\", RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"(\\\", \
RowBox[{RowBox[{\\\"c2\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}]}], \\\"+\\\", RowBox[{\\\"c1\\\", \\\" \\\", RowBox[{\\\"Power\\\", \\\
\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}], \\\" \\\", RowBox[{\
\\\"(\\\", RowBox[{RowBox[{\\\"c3\\\", \\\" \\\", RowBox[{\\\"Cos\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{\\\"c4\\\", \\\" \\\", \
RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\")\\\"}]}], \\\"}\\\"}], \\\"\
\[Equal]\\\", \\\"Zint\\\"}], \\\"/.\\\", \\\"\[VeryThinSpace]\\\", \
RowBox[{RowBox[{\\\"y\\\", \\\"\[Equal]\\\", \\\"h1\\\"}], \\\"&&\\\", \
RowBox[{RowBox[{\\\"-\\\", \\\"l\\\"}], \\\"\[LessEqual]\\\", \\\"z\\\", \\\"\
\[LessEqual]\\\", \\\"l\\\"}]}]}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{\\\"c1\\\", \\\",\\\", \\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \
\\\"c4\\\"}], \\\"}\\\"}]}], \\\"]\\\"}]\\). An option must be a rule or a \
list of rules.\"", 2, 70, 10, 31232169244055626767, "Local"},
  "MessageTemplate",
  BaseStyle->"MSG"]], "Message",
 CellChangeTimes->{
  3.951155676685377*^9, {3.951155753581149*^9, 3.951155756181074*^9}, 
   3.95115581341809*^9},
 CellLabel->
  "During evaluation of \
In[69]:=",ExpressionUUID->"08786fd6-bc05-4bf9-9718-759387d67d78"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
             "De"]}]]}], "+", 
         RowBox[{"c1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
            "De"]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
         RowBox[{"c4", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}], "\[Equal]", 
     "Zb"}], "/.", "\[VeryThinSpace]", 
    RowBox[{
     RowBox[{"y", "\[Equal]", "0"}], "&&", 
     RowBox[{
      RowBox[{"-", "l"}], "\[LessEqual]", "z", "\[LessEqual]", "l"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
             "De"]}]]}], "+", 
         RowBox[{"c1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
            "De"]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
         RowBox[{"c4", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}], "\[Equal]", 
     "Zs"}], "/.", "\[VeryThinSpace]", 
    RowBox[{
     RowBox[{"z", "\[Equal]", 
      RowBox[{"-", "l"}]}], "&&", 
     RowBox[{"0", "<", "y", "<", "h1"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
             "De"]}]]}], "+", 
         RowBox[{"c1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
            "De"]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
         RowBox[{"c4", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}], "\[Equal]", 
     "Zs"}], "/.", "\[VeryThinSpace]", 
    RowBox[{
     RowBox[{"z", "\[Equal]", "l"}], "&&", 
     RowBox[{"0", "<", "y", "<", "h1"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              SqrtBox[
               RowBox[{"1", "+", 
                RowBox[{
                 SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
             "De"]}]]}], "+", 
         RowBox[{"c1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           FractionBox[
            RowBox[{
             SqrtBox[
              RowBox[{"1", "+", 
               RowBox[{
                SuperscriptBox["De", "2"], " ", "k"}]}]], " ", "z"}], 
            "De"]]}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c3", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}], "+", 
         RowBox[{"c4", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
            SqrtBox["k"], " ", "y"}], "]"}]}]}], ")"}]}], "}"}], "\[Equal]", 
     "Zint"}], "/.", "\[VeryThinSpace]", 
    RowBox[{
     RowBox[{"y", "\[Equal]", "h1"}], "&&", 
     RowBox[{
      RowBox[{"-", "l"}], "\[LessEqual]", "z", "\[LessEqual]", "l"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"c1", ",", "c2", ",", "c3", ",", "c4"}], "}"}]}], "]"}]], "Output",\

 CellChangeTimes->{
  3.951155676641038*^9, {3.9511557535796328`*^9, 3.9511557561797047`*^9}, 
   3.951155813421103*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"03484d35-6940-49df-84b7-274024d83956"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalOmega]", "=", 
   RowBox[{"RegionDifference", "[", 
    RowBox[{
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"100", ",", "100"}], "}"}]}], "]"}], ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"40", ",", "40"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "60"}], "}"}]}], "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", "x", ",", "x"}], "]"}], "+", 
         
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"u", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", "y", ",", "y"}], "]"}]}], "==",
         "0"}], ",", 
       RowBox[{"DirichletCondition", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"u", "[", 
           RowBox[{"x", ",", "y"}], "]"}], "==", "100."}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"x", "==", "40"}], "&&", 
           RowBox[{"40", "<=", "y", "<=", "60"}]}], "||", 
          RowBox[{
           RowBox[{"x", "==", "60"}], "&&", 
           RowBox[{"40", "<=", "y", "<=", "60"}]}], "||", 
          RowBox[{
           RowBox[{"40", "<=", "x", "<=", "60"}], "&&", 
           RowBox[{"y", "==", "40"}]}], "||", 
          RowBox[{
           RowBox[{"40", "<=", "x", "<=", "60"}], "&&", 
           RowBox[{"y", "==", "60"}]}]}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"u", "[", 
         RowBox[{"x", ",", "0"}], "]"}], "==", 
        RowBox[{"u", "[", 
         RowBox[{"x", ",", "100"}], "]"}], "==", 
        RowBox[{"u", "[", 
         RowBox[{"0", ",", "y"}], "]"}], "==", 
        RowBox[{"u", "[", 
         RowBox[{"100", ",", "y"}], "]"}], "==", "0"}]}], "}"}], ",", "u", ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"sol", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "\[CapitalOmega]"}], ",", 
   RowBox[{"Mesh", "->", "None"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}], ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"PlotLegends", "->", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.95115285548925*^9},
 CellLabel->"In[38]:=",ExpressionUUID->"d2f6a73c-6705-4630-9376-914f7c29c037"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "100.`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Unstructured\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{0., 100.}, {0., 100.}}, {
   5, 4225, 0, {1289, 0}, {3, 0}, 0, 0, 0, 0, Indeterminate& , {}, {}, 
    False}, {
    NDSolve`FEM`ElementMesh[CompressedData["
1:eJx9vHcglt8bP65IqcxkJXvvvcfrsbdnP0hLkjKiIYkyCpWstKVoUUSiIloq
lBSptISEpEElSfzuT8b7x/f3/T3/3K773Gdf53W9rnOuQ9pnPXX1TDY2Nq5Z
bGz/e/7//zwx9rT5vzzdpj3/b+8nyple7vT3jpj69JwmT88//h76074bfxbR
/r+/m/5+st3j8kmLsWe089jTYUyOVrfDhfPEj2o1mc74368BY+lUNzDH5aGj
s+IO1zrgS/mlIz1DVpBo4+i/0klBgOgDo5uSBghN2DvAzHCHkh27mdx8K4i3
m2Y7K9rhT0GQ3+8LVkjqlkjvX0HG0RC5oOB4U0gt9yk9IeuG+J2yp/6mAi1v
zi+yfmk1rR9uaLNy7dzXZ4azNfMibb0p2Nwq19PPbwCO0ksXPtq54J6/e1iQ
uy3YUh5/PslOQYzBx4DX2SZ40Z7f+NGODIGqx+/jsy0xZ8uW5HVu5KnjfouK
jpd+vdsWAJ3fNK9/XKcPkW8Pj2fXGeNjPV+k0kon/Lj3JunzJ2OoBESZX7pi
jyfHpLsS+kzRdtf6csQBK8jpaL5OGzJCgfb9uU3lNtjz+baqCa898myUQ6x9
qCiKr9AdmqeBmdbeBre5nSGzOJv+yV0flUWXlxaH22H7dcuYXVIaKLl9vCul
2H6aXhjjfs6frNHVTgjlW+AToUjFxPsJvVEr+FGStVMSQSnznAu8HMEuJOy2
4IUB7rNbmjDnWaGc2/v0XgU7HIm7WqFQQQNPtG6coJspbvxcX9GUYQp2/v6H
nQss0ZpXvStGAIgcOKW3qNwexcZx31qHGcj25adbZVlDf51Sj5kJDWn3ZlXZ
szuAQW7b23WPhTnlee9H8oAjtRtPZbZRIRJ9U8aSWxOJw4psjEvWEL1rzcEj
Y4IBv/yqxTrAq03eL6W1dUA/TFlzodsUczRnG38+ZQVfPwePWjVDvDmSeP+l
pzXkswRYvubA+YdbZr01tcMS8vaDC4fpKFpfG8i5Gfglkzfwo8YEKhqfFGXN
SIgM0NduItLTOwvvvf5gDa35okHG+0ynjRcbW80Gx6+r9O3w01dgTtk8C0Ts
H+U7V2yGY0YXCsjm2lA16hW6XWmLH992WM5r1/4/1tXJl2/PuR/Sh8LBzQfF
z1Bww/0le4SuC9KsG2LuR9EQIbZpfnMaGScWGnPUBVEn6x3TNyuEktZpg8MO
v2jnNX7UG+Gu4Iv7zynu6C3fNev+Fgr8Ft2RZn/hjmUc/m6mdgzQFqDm4RE3
WD9tdrjwiArvu/K1I80UvFjaePjlvfHyb03U44kaLuHFf3e5IejZSBhFig5B
25sBcQ0UrNt++NU7BhkjnxT9+p6RsePEOf/kYRqsra4eWlTnjITa+RmnLzAm
y5ko9/6O+fWpTU6wyL0k/DKeDpmh2Ye3XqVAUE65T+oAY2r/4I7g7Nyft9ao
4P6NUbuoHFtQji2K+SsrjwPSnq0xSdP0u9UWdJcVjfsTJdGWrOx+tcwK6LjS
GtYrhYrPRj4L19mClsO7710871g+8jiuRdvhG1e7QEc2CYPaNt2+4lZINQ/0
9BNQR1Z5fPCTEgfk8pQNjswzxSmjhLqqv65YmOF4I1XLGPH0oV9Vhs6g98WX
Fpw0Ajv5WoBICRnbzooMen7TQRqdT2eWoQvKry+vKXABzpgl1m1+5oIRqyez
JXz0MNHP6Tgy8ae3Lb8fLCjQCKjbE0fghJd8w+ozDCoODlBYgnp0HL+du2rv
SToez3pEGjlBxaclDssCwukIzo8OGSXW29ULI0GHFWj4/FGs+cxqBhIDLBoW
WdFwvmltmY0wDdGXAyqF1tMRzqagIeVKx7XVyp/3SNHwKXm982tDFuLEmWW1
b6n4URZWWrSHglufnXJpnnQ4Ncw2WOjrhtKUm+IOJBpE7LfHUeXJyBfd6HrT
mmj/+zvcXN4ukKQvf+/7io7EZONz69vI0/o7zb5JuWC55/cfsmpSY++LXLEt
qz3rWNy8Sdnhh69X/G0B1JfsMr5s64wRtvw3c7mFoRRw6km1xzQ81qLgmlpI
5xpJNWw6yNfS7UBGZZto6f4bQmPfDVLgphCxyX++Nh7kk8md/a4gjeRQbGbL
Qb90lD1HlYLtRaRidVVN1Nxt4j1QSUFmyEnj1U/lMaRC1tl+jIqVG0suVrsq
49yMvw8ahF3x0yZ47aCRLlreLv9+SpM+TT8Z4LG1pD35pQm/+I0dq0VomNt4
pmVBqyIChsLElS7RYeaf2L04WwjGXPrM8lO0qfnJdDh7Kr5SNx7XX1jil+gz
sru1CpSUVu0fXQWk1XoeukUVwE4X7ZYA2MPfecB46XJrOH3gsV+fqTOWj8CN
iSJ/B1NPS3BaQaMg56xmrTiOrlIqf+bjiHtbRb4XCZFwK3XdhqYzDGRI3Vbg
+zben9b/1nVOmOFcpZl0XLjR/nNDLmXqvE7Msz8ZzilJz35qslCS1Lx9d4kO
uE6Gv1HImzZfISwIj97h4jkpjHVuPXXbLCbqUZ4s974KI+WXhizcl7ZbHvEy
xOmA7o10fx3EXhGp0z0CeJQYvfj5QAqJW23XqC8HHu2RK7wqIoFd5N709Dem
CJ2ZLJW9Wxmqb8Lr5uwxxSfdxIHu25o4fCp7xKpNf2p7iHrflBc6NKcZ4OWr
nA1L7xlgd+Ms3ko+RXhVZEk3R2pDUK+j6xmPHqI63Zf9eagyNf8tHRRKL/dL
jdbCAcos2cIeLRyMdTU7VaIPdp/vQSMZouDyvLm5bJkl7ofUt54qVYYm+0aN
2wXGRLkywvq1SrATz6yznG+OND9/I58iEQysnOek6qMCubPJbpWEnnrNipT1
imZAr3bPdd39NBR/jDGqdGNiF8+dlOIf0+ZjYt7I9KnvRRiQEV91sjeBhcKA
pZx5nHRI+NC9qrtYU78j8gUELXY+TWXCbCbPyicNLFgFL746OpcJ6YglSbPB
xMQ8Tsk3+WRBKHjfYH7aeHoIE5d/Xc+b842JbUNUuYO2DPxcOLrNvJ0FRcd3
c9gqWbj58LX/tnwmKOSEjl/Pxvmy1n/9SveReeF4Uwu3S8PnO0Ux4DG7QWTX
oBFezl6Qcus8AyqthSG8HoKotVYclL7MhHfQgYfPouVxssflzVq38fayiU6W
53zooihHqRbWbqxfHLKBhe4jyrSTNfzw8Xs0tPk9C6ZmUZ/PdkvDi/ZdbuV6
FkyqJdOjN5giMDPy+KESA+QKV+/R2y+ARzqSRqudDPFko3KK0e+F4+tBEzci
Bp9Ly4mgOWf1K/lUqWn6zcZ2w+dJcuRCRzxNqP8x+FYZeTtavaue2ePpg32f
uEfG20ms+4nv1yj36545w0R4TxH1qAwNrK9n7QMvs+CQTWnZpk1FWsP2JnZj
Fg5KhdHbHpAn+zkxjqmxGbokTiY0aaT6FVvJWLHh6c2tfK7o0lEtdd3EwoEe
LzEXwp7ZnakPbBVmQmIH36+4+xSUC38I1vnJxHsl5ko7dXcIjGzdtX3F+HgS
uDp6QJg7TsIDr5t8ft5I0kNFeSGnxFaincw38mdCTUD6PrNblTGuB7d0JtsV
+JfN5tkFfeyq0Jc362SBQXG9e+utNtb7M8mDy2UQHi/4udFHHSJbFYtFdi2Y
lp+Nbf4l+vby29Lwq0wTvr5UafL9xDynbbyrbznLAdvm/Hn8lcB9kzuNAbyb
7bDhddLxi+eUISR4xyP/jBPyW479EVQa52sEr5go4eZPW9URUXfIDh3JLOoY
bz9htybav//5l20BEk7Y6+DntuD3+HikOkFaa/2lQUmP8fZaTX6/5ujwUo5K
a7y5fceSeYk5rT5PvDjzIzbC1xYv08829ZeysEhS757HDQu0bVySXWzEBIuP
T1e/mITffN7V3tJMPHC4v0uvwhrRAoMFW+gM7DXKkOpdQsLqOdq/h0+zpumP
J/zC+E0Oj1qjzSyZ7XiSPJTz396mXLGBCG4NhvQK4uwR9Y7wamesyjcJogcq
TesvG9vDFbopBwh7kXrUtV9yLy+OXLhCcDpHPDSIr6IskIah0scFA23OeNAS
mmAXKIg+Z3/rD4Pu0Nz8qKKiTholnCaqNrtcsfryvvUn4qQJXvE09H6eG3QK
ghW2CKnj6ImYbj4XPWRu4D58Tew/vjZW+zge3LJHb6/QkWR7MgpvRz/KDnLG
ucRNpwt8yKjezxfbtd0BEZ4KGxoDxnFjwm8l8u8ykVRk43HDiFt572EyGU3v
LdT3B5Fx51LTtt0k96n1ELxdlg80+70UPC9coqXq7gb9P3ZJDZdd0LJwxaYb
CRREdgfG2hE8ZFGC9j2PO85T80/U60HBcYE/wjMl7SFdsXFJIcHTG934n0sR
47ZlrmzTU8KvfDGoa+NQ6TAtvx0sRoW/bbGb4FG2+Bj6s8pqExWRGwIKuJY5
oK7tz+8uNhoExa92FtVbQ0bqsYT7Uhpk28sjan3tsJTr7NCZqwz0GWaER5XY
QLnFRGTWXzpK5t50qR+cGNcJvDbGuW0nHseNMtFoV3d24w97dC2WP3UigIxv
DeRA82ASypU3rd52nILmgW7nNR420IkTKd4wh4rs4eOBWsYkFHZ4WzzOZyD4
YeAGvyASUovr0/kJexWk8an/+S8n5Bgek/FdQcfCzcafyOttUCGi7fGlggqS
gP6Xah5zNMntjPzDTYcie6kP7xdMbR+xjp55JjR9daBCz3lI/aeGAWLa0n9f
dWZA4+HOOIaUIarDU3y9emgQOhRjuNTXGDbFMY8HeBl4LW395Ii+OQ72B9e7
L2dBNUdnlmwlCQr3iop51ZjQSlO15DllgdzjDQPsH2igzzi5U4yujfnHNL4d
9HaDIjNPYNNeEvKVZtpzLndDr5jXETtxi6ntI9aZzV6nv4KFTOg1z4ouXGQ8
bXwJ3rj0COfpoyx8algh6XTcHGJDi2PbfJk4mFoSRTmoC6OgmTY1DAYMup60
iCtrTOv/OO61/uc3XTuSHvxwMQvmsgevu5GUISx94PUhwo5ual5rm8nUR8/1
F5xBtnQ0ClYFfvUm+MYPsc/bCP1xiy7Pa6odt0Pk/3irzKyOWYu6WaCrr7pg
v15rav0ETsXnlM+MkRnHtRB7RM82jLj1hLCLe/+QV7Y74nU/x2JdsPBO48FO
oV6bqfkJHGmb/3PnpWMs5Jos2chR7IIZsYEHUsuYCDvxLbJw1AlZx+3t1q6m
oVTX89iJlfpo5v62UfIcFc5HuDQVT2hDbuOGpwuKGFik9Crs1FoJ2Kq3mN42
IfxM0xAuTgtRJJTFuIg6U+DNnLWj0kturN5J/kCs6Fslz0T2kfH6mKgYt6Ia
9BXY+yK6yXBdGEpftl8QnbyPNvHM8cDov58ILli/jnvVwUSIjw/5YazkeL9Z
k+XlnsxbpUf4yS1mwn8F6OP2ehJvbBBUvEfzcT4Nezyb/JTeOiM94ovD9tWG
+O6l7FYXrw3uzTxiXxaNjyfBy3IGVAdfebOQ1GyZY0aUy/ne5L5akQl8j92d
OfcJDTdJr/u61xvi662G731H6DhNDY3ap2qAPc63SfkcNKQWLn0Y2G2C4HvH
jR8mUqG4RKJKNtYSC9e1SP5gp+NG/ebNj7XMkfj9tMqhBQw4HXB5vdSdDD69
2/J3FxihK/+Rn0AqA+W09TLVu11hSf1bcLeZAe4n/vkueRP4JDrZ/zG9lAGr
6PezgQ98SGwaqD/g+d+Tcwn9gP0bY8xdXP2md54jyNeqFrlUm0MgjtQqBwf4
uJrKnb1qjn69vTtWHHBEbtFdrtUaboh+0XAh4Kwpjlhsl1z90AVS8SGKEctM
kXEf7VVHXVBi1W18ottofF1M7AuM4+YKh3H7MI7nUvaTsuCpGRICnNbg6Tv+
5Mx++7H9S38rRD2KJdV1OOCma35NBYFze29ICWwIt8f/ks/zjeEQProgZ1/X
3qQMC6RqXnrFa+oGV6N0A8MF5v/kxw0ueHeud0blESfUZHfj/UEa7nT1+8/a
6Yzuzbfr3Am/6b0l5xqHHkdINjXvDVxER3WhaEWBNgUcD/y/PltJQXDj16sr
FxP8y/8dR20/BdfXHFhjWEnGBXHeb42dZHxxsXnfS6yrufQhvdNfx/GRsAuD
HKFc/U+sxtLzrSHgvlu1WMJqcv91il6mkyb7Q4583nO/j4zwY/eHbs9xxfBW
SwQNk1GnJcL0qnGDUuezF72EXQ0Wj5Pqi3EFp6NPX003FWSVBRlrV9rjx7Wh
ldKdFCRZXW7fdcMe/KlrUs55UbFiyKv2w207eGqFz0rMMwHHoTIRXysXJOae
vqBVZwSBuXuKbPRdiX4OWjt9NcQAqW0BF90ZQz7B9wdEzXCg9EaWSL8d5g/P
KrHcaIzAeunTd4zsIHDk0GeHbFM8F1k1S2WTLYKpJQdv77ZAK3lL17KrVlj3
fLfn1VhzrLi6S3yERsJOu+Sd4dzAcusycvtmEkJrEo61PqTi5IeliflnaNjJ
y7A/0kxDWk/1Rp1iGoICs/iX+dCQ8Oe61VHQ0S/olLnV0wL1F0ln7u2lo92j
efH2b6YIqy45+CSUDqET+TZKouaoiKXwj34k+Pjq/V9T3UiIWr5xmX20Dazv
EIzcwQrrg5/tyw60nqp/C2xxujyhLnOtK/Z8mr+KVWuAgw6k9kxOFygfvdCy
OsYAzOBhylMJd1Rs+jFqmqeLsxtiZa/HEPrxuZeHN1YfmZdTb4uUuyHheo1Q
n4kB+EqSfpouJHjOwXalHfks5DzK4GuVcEPkYepivx7Cr+J1s8uRdYfYMFfa
IRnWmP4T+v1P/+WcJvVjQt5Uwsu24Slhdzv47zTJUrBi77Lgy3+tCbz9ddOx
mIxXaWxz1ORtwGvU81V18wTO2kzq2z/9U7YeX6cuU2U4ofWL+wppJR28aq3/
bu/pgJCok3OFtXRgVJYrk73QHmnJ5PM/7fWxrPmlhmeFPTQbcLAzlISZckFf
+hUBbd7nJQE/SYitXFZGI+zz+fH1/K94ZTfMH/xQTzYww6Y1cywyvjkhN6Zt
6bkbpH/nCTp73DHy3ODyMMN6/HzBHfG/aSEJr/XxNf/tnNNXyRg450l9tMII
DrTfZ/fMIXAy8f3uA+JG2G6Wpsc+QB7rz0/Lf+OVtM1+bH4P49/8rlaxg5/j
SKVOkBWaey7uSyTW+zv1yp1HtwM1PbuVfKPpEHN8Ina+kAT5dey7RE7QMNP2
V6PQU6K+7wOMP6/dkPw0vldO0BRrBJYVlHm440HkG8VL0ub4ppaudd6JjOei
EblD+81x+KzSWhOi/Q5pv/7+8LJBmMaWG+tmSEHHsPlg0QFb3IwaSPrOIwOy
eH8jzcQWKkncj+WPKo6dn5RY/tPPlXHTzrMI/ik24j70pNIFjQGHHE55kvFW
7PLL7hWuCNbZV6TaS8aGlvf5ZXwusHJfN9/gJxmaGoH3m8uAdvocw+3ZFAzF
8qze42iBFydIszyekWFWXzfrxWoSFqhZ3EoVo+CS2aK8klpT3GB4nzvUQPDM
yC38L0UMYJIlQTn52RV7+26E9B43xI99hx9dErYfw4cDhv/wwWOJA3iC1PNS
I42wrPTnSJkECT8Ki38+4DJF78Jw07pVJPR4ZB51JXgg3fd2mD/ZCiY6Flee
fHRCUp01u6AtBXaL4lM3bnDEQIn4urO1BN6erzlnM+AIvlDXeegi495A68Lj
sx1AzxG8Js1Fg1LNsg+Z5Q7YpyLxscWGilUNUY9Hix1hlMilXfmJCqG8j5Y3
mLZY/0JJHfVU5Pzl6W4/agdp3xAhfV4aNMoMhv3abdA1sP6p9jYakLywOtjG
GH6F4LoUTUGMZ97v8FZtBA+c5Dia4443kjnPFxC8UEIs+FRWlRv4aA1L5Nbp
oU37nWqeMRkmIQKbf+fqI/ZV87NNp5zG9D3ecEzfixzhU6J4/co5G0RXd4U9
mUEekxPsMGC+serQGTI6HOfc3ijpAN1TWbuKXhK4MqIZqdJlB/MfQ4VlhhSs
P5a1aj4F/86/zm9xxz6+vs2OO1TQtkUge7cawbsibs3ckaaJQ/JyEX/XUfHs
1fr7Rz+ooKh55bz+l1TcqVYJXGZBwgNN59SLLDIWtHEvHh6yA+e9aOttkQxs
cCDXply3RfVfmcOLWEzM0S2/FDJsA/HdUp9KnzPQmTZj5uBeHbAPc4Yyzjsj
X/pr0oiMDmKkNY61cjpB+9O1JvE6e0g9T71uxwNcFurWENtsj/qy1Wxv9ppB
PIUl+JTgHaIzNq8vyrRA+ZP8BAFZUUjkOFhpkZ3G95dnYs2rO5kvZZzGz8N4
caV61xmmuiNOKXYfspA3hH6fmV7VEVvM2T7onuhtD/KlS/u3fjbGNalSEalY
ewwrM4QjZhvCfam1of8rQl8SvCNH5Y3Q/Sj1e5W4OULasz2jVtpg2bI0iZFH
eshPa40odbTFO//mlZRTBpBrXEu5v84GQ35KbfPDTGD/h2O5Yq413nJqNNoS
PKXu9pJlC64Q+ndhTgNN0w5Na4c1+ospMGsq8xGYZYsOAWHtKLlp50WT++l/
LP/J3S5T5XA3RA2XLT+QLoyQ6oxzr9VI4+cpvGNyhdX4/vPo2PdaJMK/2P7K
UkgDS2b+TVZa4YjeK+VdH0jauHPVs/EQtx2BO5tMZW3UYH7L7VD8eTv8GHwQ
pLBRBjEexQcObST4I3/gqz+HlOFS7LVX2pUY3+BF1XJdCjD6eBmGek5YZqp4
tvCTCAaDsjKSXB0gFl1Tt9RVAvMNbd+F+dkjuUfMf+ioGQLmlJ92lwEOJzg/
6dnsBB7rCpuCRnMIeYuHfa5zwi2xiqWFl4CmixXeKQ2u6Pcz6fsazoCcTNJt
uVh3GM3o++j9lIH9pfHDRZGuqFtVlcTPyYRNgvX5+rOuSN2U2VKiQkXipfmd
OX6uWDeP8eGaPA0R8nw1Zza64Fq+yLY7sVR4z7KwdyD8yjvCN/KX29HwJM3D
UV/CAjurE7/ollJRvzHTJ1EfeCGat7JmAw01KW1hB12scf6M0JetqVTQU94e
k5KzQpdo/f1ebhq2lRfc2NRIgjej4oGyL8GjJHxM391ThEZI/v4dh+xQY/lR
y2SOLHJnO2Y7b7PDizuanxadlweJmUl3jLfFyUGq+PBuTTC+VhYeIexM88LT
MyN+aWGXp5SfjbwV5rg+MLbPVYNH+j3H83OtICh3KqOx2xDlR2NlFq6yxolZ
+hd1vHSRIrhAZ8DTCk8Lv5l5fNRG+lWxOs5Oa1yTv/PRINEBLsPCrC236Xj2
4Xrsl+P20FCyfDiXSYfJ3BP35hDrN1jbNMdOiQErVf6FK/psMP8hS989kY7i
3o90PW07DH08qizhTYdO+J3G3yOW8DYVnzEcRvglNenn/hL+yc3To+8/vTHH
Vc1VF/kIP9srKellh4YpYirD9CvqzJFnx8y/xWuAB3KH1Ug2wJfdvR5fRY3g
SntZaqdhgeJ3Ak73bxghOfnCho4UN3g0fVo+EkZDlVp46nVvV+yY7z887zEN
nC1N2y612IPDVsfCt42JRD9HD+teB0jc3iQ5FMGEgFvEiZd8jgipkw2KWs5C
TXts2ylHR5giV+JbPwtOAb8q9VlOYFb0jO5KYqFTKiFoNMAYRX8af15arAfO
2b/yBeaboNqxJ4rHRxteBSkN+wXMsLNnv/yPQV1UFgntYR2RQtRCJdGbjlRI
fdVUS/aTxNFXozMa0gh/4Gr2PfpnOYh8U1yU+p6CK88/BZoWWMPLgs/Fy56O
8CVPnt+TsYRU7U3ePgnq+HnQTFidFfmqn2o3VZZymIoPhP++ache49hNA3BV
t/LfumEKwZzr1vzXTPBsZYd04rA5IsSffDmkbAApXcaWjQoWaLo12nr5hB7k
3qqy21JJaBEWMtO2NUBFcnt17mpA+umvXXf9FVFyL1cxXt8aVXx686PL1XDu
7X7Zj3k2xDoLXD9LSB5NZwWdxTRsoJd8ySi8UxkWB0/8Zle2gFIXZ4ZMgjya
yfSogysB3yXvtzmryCOrK+aRtpwFXgtz8ket1MNB46FADpYx/O3JKvO4tDFw
/LfOrw4jrO35vdLPWBdGljlGZJoBvN27G7cmkXDxbrjiuyEjhHFcTS9ZQsIZ
1YrdL50NcJ8jTzSki4STmmsaW7LNYVS53fjMDGu8OHPBPbNDD4F2RaX1l2xw
MvNN+aVSfZhdMyoVottAY+nWqpa/hjBT/ZLe2GyGk1tn/Dig4oHqVbGXbxD+
4dO/R0IEo1iwE3fiG4gCdHYejtxO9cCV7Ww5Pfp6sGo5KiCxcVxmGE7K/+al
deJcyhOP9izZ0WFjDaeyIp8ZS40hfcFMNFTdChnCbdrCqqYYlmuoby4UQuZO
MdW3j6jj54mcY7I2bfz8k3OsPG8qaozbj56IdYDFzr9dWxR00WRtXb2Z4YiM
jQ9Xx4ppY97clWrPGx3B/Pooaq6eLrpa2csjCq1Rzs6srvRRR5HFYv62Sitw
xbYbN6RrQbNJJW2E2xpG5n/zY9yVobFo77x7Z9TQbrnvw5lSws8LO7W2/6cG
YPJB1KvMFFTOj6+yqonxfLLoNawt4Vt2+tclLzvoZ212biXoUHoCdJ0I/jUy
KsliPjeGtcrfP22LnHA+vOoV85sBsk91bnocaIFbGUF6i+m6ePV3pdEbE2AV
a+WruPua+LKLse6bMAkvZn/fyDOkjdOn8vY4rTDFQscBtStyxjCE+P1XJ6xh
LneCewaHBazCllsXzbHASIhAloyIBiy+pjW0fgBUWYsXz/JVhZB42N7WZfaI
GLx5YlaaLurNVE+ztdkiTGbh1R0e+mhheChEt9nhWmRlQtQWbcwU3PeH+6cN
BIvaHglpmED8lSdfozhhF72XHWMGmaIgP/LVCW5bpF87YLK1zgwSuTzMwDUC
Y+fZWu7j59uzx+RBd9zk2VQ34+y4fd5pPR7PMG6PE62hKnDrdyIfDeydknOP
LCb4X+d2C/tBKmyznMsPi7vggW3JnBnEvN9QObSUa6kT8hOHVz88QMHch8PL
KSJ0qDefFQ5nUXBhpIJNbyUNrzdtE6YKU2GgIjA4EEmD1dZ1DRUuzpih0h96
spE6xh+7bCf55MT+y8T+w4TfMOFHTPQno5TSverutPNffzJOK/4J+1Tohp8c
Uls1O8gQiqnH/k3ueHfu9Pmlfe5YZMhwsJxHRifXtZW2SWTMz9hr3/DTDSL2
mueuyVAhJ5fxrbLFHaE/Es9eP04Fp8Iar/nKroh4vGvWnw90cLS16TDJzmg3
evfMQpSB6rtpP+0KXPDcwsP+AI2OEbfsA91JzlDabxyQ+YKC5sid28pWkPGl
IeG1bzYdfN+Fd5TaUfBgZXf+ixo6euI2ZUQRfopxRo3kxSAGru3cIEZ6RoFU
cGnZm30UBHytWxegT/gRZbvqG49QEfRmY8i1X3Q8923+ofyNhmSTPXwNCXTI
xf02TCHsUeSq9KoNfAzEdl0YOSxKQ+g1z6Et88kIM3n6dT0PHU1DsmcC+MlY
aXyrWXw1DWbsbmUdl8lI8QoxUNen4UZK7/YUTioY+8xPH+2gQ9rUYwbT3hGD
IWIcb0kMHEoPlIzWcEdn4GUfu8t0xI3Gntnyv7gNitxWTTMm5IaPP+t0J6OR
fuwtdyEDVK97F5yCXWA4ckzudwoTEXJtxzccckZZZU1MkQELAfOf7rb+6QSu
3cZ9S6hMSIl/u+JJocO8/cUxI4J/rlj9MMwumI6jCslufTYUtMzdKRteSYea
U9yPK7coWHcgQSc5jIomtmjZQHUmrs3JKEiTpSHQ7F7aLTcmAvrFNyRspIJK
U3kbL8TCikx1v0VVjsic4XDHqomBxO6ujxI3qLAKuSL8to6OXio7O9d6gvfO
zvFdFcXAm+KMMNtvVIRVXz3zeZEHSvyrfh/ZT8POwTZqQwoLzaUacfRVNPBq
qxS8J/BWafD8pcGbWrh0OP7r0RYbzIky6mvNVyX8vfzoWgEXDPse2jkvUQ57
HDj2Who7w/+CegwpRxmnQ/+8TzwxLR6JbDN1fYrY4sbvBxcpLyTxIPt6UZir
BXpl+SJHnOTgcbC40PWyKfR3ffdd4SEFN4tLHp38NnhWN1SlUS+CljDxS3Pf
2uD5jOqYWqomqD/m2TM8LGAZkqNw3UUH+bG3d+zeZ4E5tavUXiwUg9Ri/ZNg
2GHpo28aIvP4x+x9jS3OpmvsDywjQSRAMiafXQ+Cz7+0Kl23Hj/v48BEuye6
8C/d2XYy/ZG24Nt12o5oN0va6rHXakzus8cr0t9YJ28S6rdI8tc7uuJb4s7P
fL1AlsXuilnOrtCqnb+wwcsSb1YePla/1A312hcKH7oAy5TOCKRVOuMZ35UY
0Xs6cNNbpnTtixPY/NM8VhL21lzn7H2ZY+64/HW7t5YF8FKt9m6bARnc1gsE
PnCaI0f7GMe3JjISZl/VHvWzBPuz8Bsnf7Nw/F5UrlaeA6wpS2OQNm5HjRxw
K26R+Qp/j7H0UEesM63dmPHWEQdl2MP4hTWgM7K9LCLYCYuOclxSkFdGy/Mt
WekGzmjRM9axXKY+1t9Qp8n+T+xbTeBbEn3WAd+rzvDVkz3FcdwM6k8uJyw7
64IOTd8vv3/J4aTMhvRHrU44FLpC5OlNOSh4DupfvukMkZ+7j4Q7S8PkG1eY
WqYDeFy8+uvbBKHD+bNryUVHrD8uekt0QATZBx7W93c5QE/ctcxDQAKC6xcn
xRI822vXcoU1w+P7rfE0CIQurfQttofC6M5FKup0BA5UvH94kfATLUMutq1z
GI8n4IJf0ZFqJ+2J89tRSyWeyKIjnARPl3p6cckXK5heTHmsaUiHhNkvhaKL
VrizM2Tp6rd0OHWl9pSrk9DbJCm1czuBk+Fc+8+l6CH118cXCi4U5Nx8m+ct
bYgvp6WtVkdRsb2XsurwMlu8FSwvroygoJyj/1IJ4ednapYeePGABp3NUuyr
XtLRL6zjum8fFRCVUE75QuC3jdO9fl4a3O1Drg6RqQj5Zk7yXUJF5145RVsl
Kq5cSZanijIhMSNBq9t/fJ4jGeBP1iYPWHuMpZcyoJlyLbolnwW1uG0LrmXT
0B5bVNHeSUZPKG/0c246nvQsWbgyjgzfdZZ3V++m4rbPPM0j5mSIP5/7KZGo
Pz46InNGMxl1RXvSz7Ko0Myc7eDwjYyGONnOGMJv0Hjoepp6iYHG1mvy2+po
yF88uDToKBPpBzcepfUROB10LCr7NRW5jIVup7cwoLKn2t/DiYr4XyMFe7sI
nAo4K/+9iujP7FfctzfSsZFJe8wrzxjDpxQ6pG4u+fvy6vg5Uwl9sn//0lXp
k/g1YUcn+GLrUM7CUTV3CPx1cfPY4IGQqIY9O5aRJ2V+afmz87bQ8HZj95XO
BW4ooouWxt2h4vC15XNZNDek195vG1xPA7ki/1naEQoW9pV/ls6h4bzj2Rev
l1NxXlPtYUgWHTnPs+9uueyC7cVqK0MO0jFc9S5/xzpnVGjWD/MnMiBIKpj7
GC5I73Pd/ej5eD/uMhBvMpv7177/5m3eVbvI5w7jshITmed3LF99kQIG8/6G
zVHu6H08etXejwp2yfxF3S7uKLfY1e76iOC1mrESS1nu+Cb1zPbNEToOXpeQ
ruQiY5PgDpe9khQ4v4g9fHpg2nk+sW7HztvdETgsKnO6xWGqLOGEkPiIO82u
HqAfLzCe+dt1qrz2v7iPf48iV1D+LIwM0vCAXa8kRSKEhuENH0/IJrLQU+GA
N0qEXmx5KnvF0wOnnyh9rQwn+FOce6F6CsGrtWaMdIm7jpWjRcEZAWqo2TkW
UiwT/5CEKYh9aiSTITAuv6PgDXOk8tVuFuKeyst0JYmO7VdFuEzGQ060p0r6
k+B5Et9k+vyqS5/vySuMxUNKuSNTaNX5gUZZ1LN5sZrJZLR4Oq7KK140yT+n
7IcVT5xjjv9SnfCzMMh94xfJsf2xXc5Y0fm04WeFHJqit3/oXuWKyANc4swF
SmiSnxNqW07GrZHBm7X7JKGRSunRu0OGiu6S/b3yehBZtKVMWpEy1T/JoGBZ
X7vD4w9CY3xRiTK1/kHKeHwXBzqyFwynOjKnyvysqd/nMjGfnP7g0BUVOAin
VDU0ueGpnlq1DpcWOrcwq2jRLjj2xaPO6Yw6sgr6ByzYKUikzCmT8NGCxTGb
t7O3khFRPKzKJ68N/2KFgaW6FKxg9c8wPqKMEbOe3cc2USBz8Fx6cJs+mkMW
BXbQiXV097hxi6URHhRwdX8XokIsZo3c391GiEwsrLx+nwrBGze6j9XqwC55
k/ntZVQcjEh8Wr5AF4P+Ygt289CwlNovNJQmBbGjVjaZkjSMLG9ydrmsDqMX
Z7m9d7nivFnxGnFxTbzsNeL0tnIHV2VvG4tvAYQYEb+dnSfi12ZA+7Lf3/I8
Fu7SHKSkh7XxxLF3NOw5HYecN9+nFapBqHmLoLEwA0Pqtz1mKmtCLvDTbL8Q
OpL29ov0f1KFPzazVXfQQJOWTap4qYDi9FWKtLO0qf7l72nxqok0fPPYgY0H
dbBFXf6pxyUKbnyPdww5qg2Z4o+fOE7TIPfxkriTuD5OXu9fWKDJwvkDJ7h1
dhhihOn5S66Lif68L3qVPEZ4z8rkLDnOgiD75rWUw9JonME0DlWh4/xl+d8H
pITReCGFf1EoHQ9zq0K5m6Wx7nTRj4Zf0+JvYTl1/1LKbDzedDb0FTd3mlfT
UbZI3O3cKyFYKYU5OiabQ9Hn8/UPwvzwO8KbqWNrCpOGn+IDDBHk3d71Ydt+
Y/CdnHm8jl0eO5fYhb5OJoEUpNd6wl4KejsNl2xIIuEBKVQpJdkGkgH21uaW
Ovgxt/3zlzlqGOSk5lTpaqPxeEPIHS0tYt6f8v1erQsT9uqZtLWq+K0plcpd
qItIQ2Uq71OMx+fOH8cH0mS//qWvsppMv8l9pLDyFXDxPe+rxdxyCCc73yfx
W0HwwTKhHdflkWxBtpW0A1p37/paUyEGWR63TkkFi/H40jlwUJlzJPa1M96+
1exgKlhNxbcQ5lR8vsYEBx+vEGawELsyPCKAsKsjf5/uOxrMRCv5g8a1lzSs
EL56YVSAiecvF8/u8qKB2/m7k/B+Bjp+yPdlkwi7JvPp0Oa5hB1I3ahymLAj
3hu0X7YT/lJBx5+L0c8ZOGmWVD1yg4KuxbOLlG2ZeFVSOsffnILolpdBu+OZ
ULr2NeiBJgNNprZrAy64g+6aNPvyDzpi003Vvgy4okJY+5HyQwbm/w1fbmMx
jv+D0+JiCZxhe7g3npQy3i/CP56Qp+hHCtGe9caVPMMLIVab2F4/yABZ7dmZ
i4LiSHfel0wi8EaTS0D4V50YWrxbUwKI9Ra69HPc23xJ6Amb9NyLZqKOvtv7
Roks/kqcjP7QMhF/Ov4TYeBHXYYy2Xfh2HoN9RiLN/WXQEHe1vQiQw9sCjP1
D86Vwq7MY00b7jNw6tyvxtcWghDnbrv9rUIENuu2dT3oFUOIVTj1/gk+LDeP
/MTXKAGObT620uyi8Cj8YhUSroxNbFaSX44bIHe7uvsrSXk0Jd0quhagh3ov
l0XpafrQNlVYO3uBNS7sueNKOiIyFk89ajke3zpzbD3IG0Ho2sbLeYul0cNc
8/HAMWNkHuxjuXgroDJTnZOywXg8/nXWWD+l1MbjX+cgsEHns0CNHOx/8ekW
8AiPyd2K2Hy8b/XAVyO4+O8WFlU3hriGKNU83gxB1MFtgZbKKE9JiGJbaoqL
uhdEL6fKILdcPTtS3wKzqTHbezhlEfx4087QFcZw6lCnFcmIot1qhb7OJUPs
7edWfFUrA7vgBJbebl0YCjU5cTbrEuuz4L7pWjlwH1tTUHqBwFU71wv5nNJQ
X/aYLzBZCz/WfbzHvCGOyy01e9/Wq+LolWtNaeHi4KlhM9tBNUSF7WCSgZ3g
2Hhs1sXFjo/P96tKIFej74RLlO7U+W3Vnzp+s/RBdy6T1NMyxRmqmfGnbPWp
46WlPTU/NBHDpdXRz6+Ae9p8uhU6Cgj48mTtw6eLIVn0J/xbmBzOP64SkzCR
xXa5iIw+Zxm0n5dWvGyvgyYb9cZ8sgZorLUiKuX60HGj/K3t1YBU/VnW7O+6
sGEeulZpNF4fJMfjd9jG5Fsy0/ohP5neeqPo+gnCnv3dVP7S75M6co6p7nVu
MYADd5nJ4QfKYLwWSa9o08PNh6edzB/K4nyj77yzl9Rx7rTLg31fVJDYv+n+
zxNaINutZ75Zq4jurG/caRkEHtRHLeIPoIz5K6/sJv2VMRz6z892vq2QRTHR
G4+n58LH9gBPTl0dJAdxp87bJ4QsadvrJde0xuOF2eHwIGDxAXst/JFbl7dT
RhwDa13ZdGp1ESJKTtiiIgmPT1vn0UIIPh5SaeJfQAYzzLNbkpeBmM6TDxPC
pt1nEpnGXwlensRlYqAdwcT2SOPQs3vH/ZO2af5JLnOynKHiQK2dUUy4mbCa
6+8QuFgs1/AKLFhEKQs8fMWAWvAzFrOeCb5K9fvsHkw8ek/V2WNJh13CutWr
+pkYUJcr1K+hw6EjdE7YHeZku6a0M5E2KceMVgmua2bAyzX55bzDDAh9KN5T
SmLAYUHw9jgJJopIye9DxFgoPjOg51/Nwq2gZ9lK/ePtl2KB08rO5GcZCxmn
13NEC7EgfTX59Y40BmSclwsNvSdwPmjxjEYNJjRulAx8msPCJWvnUlYME6mR
0b4KiXSsMPiw8s+u8f5pEHxjz2ilBIFz/8pbxpomT/jtHv+N1//S81iT6SY2
C5K/ODGRyL1H/qkY4S/pL97tW8Ea49+Z9Kl83GjavQc2D+iJiL/vWMfAis/7
I7kb7CGVN8L0uUsHp78e82yTAza1CvAYhbHwtXXVEQ3Cz90ZKHhLkLB3nS+4
DIUXUJGzNDq+tYqJZGHx/trlFHhVnS4IoevD7/Hh7w986VBq3O57RFgPHqby
bFnzGLBIzNX1JpvAzMs05S7Bv3wE5r2Zy2cMFQ3nP3/16Lh8YvGzTUUKiO9f
OVyzg4FUtYA3eletUMF/3qSnnIHDoW2hmRXW0Fj3dqBzJhPLGfE1mf+Lc1qb
Eue5lgl//aBUVp4yfN6vyO4OYY3dZ9BXR4lxF4+RsQcksm6E0TbJT9oTiH6u
KNmhCq0nPj9efmDgS6T/oEK5Fg5kyC58u4WJ365bR4M3q4KjkPtvYCtzKp8M
nZiX8R8xTwuuJCa0ndSBgLClQPVPJq4cs/LjOKsDC6MMLr0/43pJ4NjEPJx1
fjE/tlx7sn1j77mmztMk/nhi3u01QWozjZFznTdxqMIAV8UeO1z4Y4BOMb9W
QQW9MfuXLzgeb8j2fzynlk+4SP3a61/PtEZF7de1Rwelx/gQp+kkH/qHL16G
k/iCo4lqm8qUEMjbWXMlWhUld0SYzgM6CFOkvfh9QAGR6ZS/tvfskXNJvfbp
HWX0n/T0XStvj+DWvFovmiz0Qpt/ntjsgKwrTj93BMtiUL4ke0PmRDw8P6jK
lKuCN93glKEupJErDS/24wtzfNzG4+P5Cb/MqX3pPgf4uvg49f5RR+fRh2RF
c3vohd2WqG5Vx/KkuspENRZabWNE5p0fP/8neO6Uefp/4YK0wTyDHSoEryqa
UchlOI0XETxpir9aREHrh6ASc8J/V8q17v8z1x01/pY9MeIecOYzPR+iT0au
W0HWTQIvlnd4n/oiRp6a/nfa/RN/MvjOc+3MOcFEe9kSfukcMpQUjdyWeTLh
8WfnLe+Ocb5W4wi+w1c9hif4mYfzVDnVabJcp83q3ArJZDgcVZf+dIqJDYIX
tE6NuOOiXZy6SQ1zbD84iYrN6dZqmhdYY/sjP9xx1WaBMW3PuL9YR8ZZ+/s9
Q8Ie+Fnye0vXaz08arnnOouwS2JfRGfn3DGA08o2p6/8xHq4yJRcWGqMfX/3
mA7sIPhxgKz9eUFTFP19/UZ1OQO9A/TFGb/MUaLL1il3lgGT/TO/Br82xVtz
w8NlfQw8MEn8OXLIDGm6hTZf7zPh/eDFxUAtXfwSjpVm5rPGzhOvGU+eJ5IJ
7+A5jyacEjY8fqUrC8MfKYt2tKuiyCfnnOODxfhTNOvMwjQFkLfvLbsWIT7W
n9b/7rWZWe8JW6utOmkPp65HNjadqOUkf1E7FCyzS24v1Zh8P7EOJ/jbv/tL
fIvh8GJ7bn6LDXx5q2965qrh48LlKXPt7BA2S3GD5WZhhJeyXThh5IoH+U21
q2+roKjfaXXZORfY6j9NJl/WJPwgDcmsm66oq4t7lB+mjeD4mdlf/Zg4cyzG
lM9UDv6vz6puIfDdzjZrleGABIq/GPymEvhrcv69tleMHLTKPr4ze+KMndqu
urIPWGPyYRdsOnLglYKJx9j8ZrpO7neNLXrXSX35d34f4wCV3G/3vvt4oJca
QTIXsEGgI23dby+PsfNabqvJ81rt9XcpuiusceLRp84tBSyouNW9dkqxg11n
Rvval0yU6P+Vabtsh0N91lqfK1mQPBkecjPVBl7n9fac1mVhvtwhUtJSQNbC
7tGLL8yx+vvsptafYztZ/79mTvKdiXt4/8XR40SUutoWEkxuOESKEP5JP++z
B0WJQNCdJSWz1Ql9z7K6d86V8AfXO6ytOsrA1rUOluFJVpD6sDVTWZXwT+Qa
8/gSSChMsmtVI+x3xPXm56qRVhi5cfDrGSXGNPzwRBq3iK7RMmucCrvk/uSV
yNj7SX+U4Bc2yQ22OU7gYrrgk4jA2P7ybafJ/WXxjB9cf9hcxu8DcUAtoWrN
4wRHuC9X8T4TLo/uj+4q8784QUvBcvZmx0XT1jcb27/8qa6T+afOJxtb2KE0
yeOXifJz7C7fKVsEv++aNp/vUCBV3kJqjZRCy/o7Eg9EKZjZZp4XeFoClXkh
QllpFOzJ/aZR3C2E0U/xbruE3eCiNeI0z1URWTxZrxgUd2jxZ/UdCVWE9MaS
6/dsyNiVuPFTx28F3Poq9uveKTLur/64uHKBLLrNFvGL9pIhvjXF5QOUQBen
NEZxkLFn5Ny9B5VaaF5xq/PJQUc8KL8nIcEgj8kGTuP3lcbxDhP3v9yQi4/P
+artIfBYsW9uFwVWx1MWsM2euK/kPiZXu0zKY+vUZTL/v/LDnCfLH7vf5I42
j57Kuyf/2wed+H54dopy00zC3nT3m93ZQYHLqoeHSO/JaDols69kiSPcqN++
DHWRMbAu+5FZixMiftur7qOR8ftm8c4nlk7ozvAkxxHtDHDklTzKcEXnuo30
q28p+CjS0yeo6oxZh0p4f/+k4NyKG6SFao4QnPGta6YbBTz6ER+1eF3G70+5
I7nqsI9am8vU/dgs+/H7T+P9bLXFq52L2884kcfSR6bfC5tWXrYzTozOGzR9
TIbb7r/zYjTtYLaLv2ftUzLKdwlryH+xB19LWcGLNRRc0+LckpY07f4VMS9T
6j9pM34fyh2D/kpXJAgelp6cVTvPkzwms6yntccev6JXJy3SpEF89JpWpagt
qmZdK9R2pyKMiyyatMAGkYL3z//uI/qz7ccZ3TqbsXh6ARosykqfcxQ6wMDz
3qE1F2m4p7ZONyPYCZxbYjJNihkoion+2cdnjeiTJ3lmzWcg7nmndleaDXbo
zGUW7KTCK+l83rc4K7DT3YQN59HQsSOv68QCEsjsuB6aQEMW7xW5FcuscDXJ
medsEQ0ZDoPdbJI2aFctPfmyhYZM1SEd7nW2mK8pvfzQX2J8bkRXyEeb4dcj
uV1FPlTc2XVtVcYtS9h3CCZ5nqLASIdDp1/bElUbQ3YzvBigZue1n3lui865
AcdLLtLRYTl8jLfEFi2vU24V3mPCR99XgJEA5HxaHc8bz0TdlcfXbQ6Q0NMU
H76+lwF2pxm1YcuB2DsyHzKWEN9bFqWE0+3w3a/eQi6QiZC9R5Vb3RxQX0Ch
69cwMBq3XeDDRTskfZqp8DuZDsGM505vEi0R4fyVc9UyBjQ07AtEOQA//jNv
PAncS9a201STsoCE0s6e35EspO4KndthC/CtaZQTP0r0Z41QRUGxJr5oNH09
VkDBe8m0/bcIv1oh8crJwyfJ0CtPt/oWo4X4A3OOKkXREe7dHvfHxRT19bu/
qQzTUFy/ecT8pDmCAswWfTrijvmCUTebI0mIdxUOd9Zwg+AFOlf5PSuEMe/P
+9VIQcVW6zcPa6zw5JTLzn0cFPh2iHtT31sh6UmWCpcJBQ5rtvReoZGQQfok
J+NP+GUf329b98kBt+42JCjZsuCxcMBvTqgTmkZ26ex5w4TcxpY0/ghH+M/0
kwrIZ8B8NO9x2hNHOHiuqZ1zmA6DQ5u3fvpDyEcXCzaIM9Hf+dmw6o8TNgkv
3t4gx8Th34Xu121cIKfOr8l1jA4Z7bilnlZGaHfc4/tCnYGdA+/zfqmYoCbL
q2fTahockh57btxsicPuLosPV1GgvWSVtxnh59A+X5R6fJ+ME4/tmk/NNIGD
sbfQ11gqyi8KJ7dkGaPowTter0sshAivtpqnYYfgrbHJolIeY7Kf7dTz3Fw7
6OwNeNZ2jga/1UFrR3wM4bZ2r/gZURrk+yp18moNUb5tzT61F1Rsupnn61Sj
j0AnHyUPJxqW8coKfjWWRXlqZEYWiwoRd+MXAXqyGOisehyhTgO1wjpuvqMo
hqL2dETsZYIn6L3FEyNrZI2y2WxXYOFny96Mupk6+OjoEc68zYRYw82gyEVa
CHI3Nfkey0K/hQbXV151pFp+PpHqQceG0eCUIRjg8L6XF834Wdill9IWFqYH
8f0VIS8bWeiI9Rvsa9eBEK/62plpLKyV9XtqXGwP/dy/rPQgJopLDr9b9s4U
YT/6Yt7IscDHuPw40tsUdxxWLDtNoyGf/jo93dgUTRdd2KmuHhjwL+I9E2wx
VXab+P81E/fvzFBqKkpiz2Ig3vPqbHqvOe5K+HXuesfAnCi53NNKpvC5ErzN
7y8Dlyj3YmZKGE2dj+fWU8sjeMk/ff7iMqnPU+2RDdJm9sdyb/IYu0/4VW1q
foKHTqSfP3jp2alD2sjUTr1tSeC/gO+sDSo5RjiZ92ikdbs7tp/bt3yWiCmc
txp2ndP0gBDlSGyahdVU+eK0+6IETym0KrH8s5uJ1Xpvt7N5GqA+qLnSpZmB
9oLMaNoSfXifeyBxi8yA74mw36FiusjT5XtPf8uASGzywHqGNjSerw9kGrBA
b77aLm9siOWWwn2LCZ6uxVit832rMTIsdQaXEuuJ5CfAYWSih5BZ6xb7HSfw
wIQjgq6nhfA4p5e1xkyY7NJ9pF+qitr8pu1GC+mo3DvDNH2mBtIEg84cfUQH
x0itPGeVKhKE5YNuDdERIiiS0eogB42Q8nlfYhnI+Svh+uuiAuhPmrTFjCbu
G3KNySG0SflfvxP/O5dJSn3w+eH/9k16S2TcVA2njg+bKL4n+JnM3jlxT11m
Uh67/zgHjhdR+kSHjpOe5zZHssuikyt5kVw3HZHFg8avWxZhSvnz9KaWT/gh
8z1+b/3hTUPqA4t5PvuV0esw0HdTjYZtpKiXHMYaSDcu+8hVM3Gfk2dMZvtP
/leOyH/3XU8dT8oy+N+9raPDvG+9dHH92aKlNpw0RPtpr14VrYtbz1aU8tvR
QH7U9PLkVm18yc3iGW5zR7ycjdSdLDW8cXG8+oHHA1n8D5eek1LG46bCvt50
1pjcKjO1/QQPJxlSw15LstBs8nChbYgdxLc/29u7jQl/3cIRxyc2IAd2hwkR
6zPStk91pMoVrQpyo7MuM9Hx63rR0x4XhFZrcWersMD7WX7wZbMzrvWXbb7t
TuCB/8jdTLo1aBVNXXYSTHBSt8W905z2/+EIHjwlfmWGM7TmHhw1usJCn49q
u46TM6R6SrJVHJm4czVfcHuTI55fNj09O5wK9Mdo8HTpgiNmV9GjfVRseNkZ
x79TY2x+K1iT8/uvHqP/9nVeM+szH7yjgPFpuaCjgCKEzy6pDdtAxvPRWV0B
QuIwe7Vm5YNoCgR5etpCBlUgtj8m3Hw+Zfz+LMeYbEOelP8V6v9f3F+O0Nfj
K6Im7uty4Z9cSpmU/300+N+5b40yPXJTGAtG2tq5q0nieJ79mRTkM3Efd/z/
4uT+d67yL50Y74l0oSc9AfzsdKxbGFyfJeUKlV/fn4QSeL5zreOqj8V06Did
Nbz+yABm8bVi7o9peCb2XPptkBG2fLeSWbKOBmfHuhqXOhOs1dLOWkfobZIc
c5ahnhF8fTeQPGUYqHu4/rtVsR5KMlLFlI7SYLT1mcffXlPMrW7ySuynYPfC
s+17miwRq/m5QH8OA//8cX4lXMvgu5ugLzC5TzWxj8U25ceF/wdK4y7C
     "], {
      NDSolve`FEM`TriangleElement[CompressedData["
1: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
Za6D+jqnaO848yjb2fxdUqz52xSRV9hV9G4p8gnjbCPf7J7CTr67y7LzhS6i
uwrdUuxNWMtZ+zmXdU9x7r7TvH/Pbeb3sF9c7XnOGZFcA3me/uazH2Hd5wzJ
PoQ1nLWa/T9nr54pzgWbm886z/rN2Yxz3D2i7yvizLMH/SvsJVwn+rUi1vi9
ab+wb4q9AOcRyjmL9BJvP8s/6G/2F31Aiu9Yf9kLsOdgH8C5iTxWT+dEWH9Z
l8mFHJgibs4sIo72Ft0nRfx8vYg4xjpwkHgHE9tSxGdiM2sDcZk9KOsGcjcU
sS4cKrm+KfbjZ1memL7U8Zy1iv0we03i3mGSPVw4QlhQRHwm3h8pup9wVIr9
J2sJ8bK/6KPpG/vprfYx/JY4w/y8yHz8hrxlc/sLcYM5hN8cK3pAivgBPc++
dJzogSn8aZ5lnzV/kHB8ijmIntGeh+g6QZhrHXx3ovWclOL7Of5mkOs9WXhJ
9CHkpYRTRJ8qDE4xT5gjtxcxP04TTk+Rd2Avyz6WfAR7WPIV8MhXsA8nVzEk
Rd6on/2C+U5e7gzP87vMo4y9M3z8Zr55+F5X+92ZlscW9t1niR6aYr89wTzK
OL8Pta07278oY69N7oNz/YuiJxbR7rMld45wruXJiXBOJx9yXop8DHN/suf6
MPHOFy4Q7jePsuHmj0ihY4J9jHwK/nVhijwAZ3v8krwSOQLyXh8X0dfYdZHk
RjKnUrRnvvmXiL6UmOr+oW8mFdEvo5nnKXRPtq9elsJW8gcTrWOS23s5c0eY
UkTd9MOVoq8Srk5h971F5MKuEX0tvp5Cx3zrudR1oot5c5DwsvjXi75BuNH2
oAObyKXdlMKu+20nddBfNwu3pKCpG7uo91ZhbIo+vs7tIs70cv9PdQxgH8Xe
kDPouBR7bfbcnFPYb99GXwpLiqj7I+av6DuZU8KH5lE23vwJKWLAAusnDkxM
sVdj/0mMIdaw7yTO3C08WkQsYy94T4p94L22k1hGfJrkGMY+lr02e+7Hi9hv
30ffCDNEzyoiHj4gejJ9kGJ/S93scaeIfijFPhc908yfmmLfy96deDXdZRO8
F344hQ74Q6xnvPfhp7pN1E97pgmPCE/aTuyZTjuFx6xnhutFboZtmmFZvnnQ
8o+naD/xnDqI5TNTxOkn3F76jbY+kWIfDZ91gfpZE2a53sdcJ/VwPplh/chV
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
       "]]}, {
      NDSolve`FEM`LineElement[CompressedData["
1:eJwtk09I10EQxff33TGzkrKjkCBFoCFmiSCSh0SxP1AWQZAIBVGnPJWXrh66
BEoSeRKRTilKSRRUhw5BUB3C7A8FEkRBSnQQ1JA+j/c7PN7b2ZnZ2Z3Z+kuD
Z64VKaUTIIOuUkqV8J9IaR7eCp6z8QKW30f0Vxi3VFWR0ia8BZzEvwaG0hib
PeV81wmqYo1rusjmkOLAbja/w9vABnoJ3g7G0Yfw34FeCudQ3jlsx+EmcATj
CtwMWvC5Be8Frdi7y2e/5Nx1eA/oxzYDnwbT+NyEz4MhfC4k550qXJfWzegv
8FFQTf638Dm9CbFP4Rvgd1HOAZZLPl95a/G5Cw/r7GxWfVfQj+BRcB/dRswd
vRF6Cp6QH/o1fFs1Zfuq7gfZfVD8E/Sc7gEms1l96su+n+obQC/C98CH7L6p
pvfZNvXyU/Zb6uxh9FnqeYUeyb636ljOrlH3X81+b+U9VthXb7QzXLtmoiZc
u3o5W/id1OM67D/hH6Ax3HOtG8I29fIwupMarqLX0H/1ZqAjPBdat4fnS33t
DfdW83cKXUFsCWwWnket+8M2zd9ldCO8Cyyg98G14FnYpvVMePb3o9+FWTGP
w76ay4fh2VT/fqEPwgfA53C9usNq+B7aexPe17/6F/4HmtH58EyplyvZ/0k9
+Ib+Dy16aSw=
       "], {1, 2, 3, 4, 5, 6, 7, 8, 4, 3, 1, 2, 6, 4, 3, 4, 7, 5, 3, 4, 4, 4, 
       1, 2, 3, 4, 4, 4, 4, 3, 2, 4, 1, 3, 3, 2, 2, 3, 3, 4, 3, 4, 1, 1, 2, 3,
        1, 4, 1, 3, 3, 3, 3, 1, 1, 1, 5, 5, 8, 8, 8, 2, 2, 2, 2, 2, 2, 2, 1, 
       1, 1, 1, 7, 2, 1}]}, {
      NDSolve`FEM`PointElement[CompressedData["
1:eJwt0k1IEwAYBuDpmrZ+sHUcTIgkaCJLiyDCDkWRQ9CMIHAEBrJOelIvXXfY
RUjUsFPE6NSGo0YYaIcOQWAdwv5EYQhR0MboMMhk+Aw8PIfv+L7vd+r+5MhE
ayAQWKTlQPMOcogQbbRzmDBHOMoxIsQ4TQ8JrnKDJMPc4S6jpHnANDM8JEOW
WeaY5zFLPCVHngJFXlHiDW95zwc+8pVNtiizw09+UeUvuzSaWYUNEeYEUbo4
Q5xuztHHRa5wjevcJsUCRSokFDfAFDPkWOYdf2gQVOxJosS4QD9JbnGPNBmy
POIJz3jOC/KssMZnvvCN72xToUqNOv85bswOInRylji9nOcSl7nJIEOkGGOc
Ai8p8ZpV1vnEBj8o85sadf6xR9gT7QP6UUsD
       "], {10, 12, 15, 13, 16, 14, 9, 11, 4, 3, 1, 2, 6, 5, 4, 4, 3, 1, 7, 4,
        3, 2, 4, 4, 1, 1, 3, 4, 4, 4, 4, 1, 3, 2, 4, 3, 4, 4, 2, 3, 2, 3, 2, 
       3, 3, 1, 1, 2, 3, 1, 4, 1, 3, 3, 3, 3, 1, 5, 5, 8, 8, 8, 2, 2, 2, 2, 2,
        1, 1, 2, 2, 1, 1, 7, 1, 5, 6, 6, 4, 4, 3, 7, 4, 4, 1, 7, 3, 8, 2, 4, 
       4, 4, 4, 4, 1, 2, 3, 4, 4, 4, 1, 1, 2, 3, 3, 3, 3, 2, 4, 3, 3, 3, 1, 1,
        2, 2, 2, 3, 1, 1, 4, 3, 3, 3, 3, 3, 1, 1, 5, 5, 5, 8, 8, 8, 2, 2, 7, 
       2, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 4}]}]}, CompressedData["
1:eJyNeXc41tH7vxlJ9t57772fFx4z+7FXi4hISiqVEooSKRpKKKJERJkpIyoz
ZTRoGGVvSurnj9/n8buuz/X7Xt/3P891zn2f+77P87rPPc4R3bXfyZ+SgoJi
My3F/+fzwP/8+7//FA3uiO/bSUTArjaaHz5EBE8S5PjXx3s/e31/uT7+j1yW
3og8EyUHGLffJ52+aw+eVuX4+ggXhPNIalUxO+K5Q2vOo00kLF6QD+j7bQUl
ttq3EddMcOfYAkn6rTMO3zkuVfLUAcM+YlZJn61w0DD3781xe7J87df2qzpu
ZuD+Y9i/kknEzZd3PwQ1OuCGBM12YQVzWLQbCf46vI28vzLp2zLfPhJQvVra
av3VCsNJRBNHVmuYpnbmy/2yhMjqw5WGoxZ4Q3o553LdGpycVwJe/NVD08uS
3+UMRNDRWFDVmOuT5bmEZfC60tmQx/kR3wvUbsrDZYf1pc6/JnhBnzKjddcU
M7tmTtweNsYTSYeOylRLqNzqFaEO0sTNKw2RTmeIKNJ+ebiVQhS1P1cnTiub
gupNWLADlx68TpLuXpAhwknosSinszZ4rGv4FnrW5fm/WL723h7+sTuYHeoN
MPYo2m+Nxww5s+dbnl/RQUN6x7uQGSuyXZWKcjxDNvZYdNR6u3JTC+zlp3Ol
eEH+H2XGGITL4w1hLPq5KfI6EazSTpdN+MzI6zmWO57P0lhi8KmTK8/TbeB9
zJW6L0MbfEMuJzzUzDE0LCaR2gYyv9Lec6X7ywE2avcHgQqWqHIhyBitGeKi
yb5XYkHaZL6HXB/q3h0GSFt5G9emVcnz5fwLx1f+aEE2T9ej4bYaed4x8o7H
8BsZ8LuPmNU9UkD71zBr9yZe7KXT0J0Wcka+Z+y99jkteOVqVf2u3QZOj3MD
u+Qs8PeJeAKbgCWOsLELZZw3wL4bjM0x8Y5osazQuHPK5L/8f9SXq+T7OyLy
iRRpU9e04Rs/KRN+XAN9oP58ZlocZz4l2Um1KWHibJrQOVNdJPdFPhK9qIxz
x9X3LmgKoTC+UzfR0BhZdwwLz3cT4GOgNMjZYYK0HPcDoeetcSk+Qj7SUOe/
9F6+nzzOWSIHizyhbspILkyPvzgRziaC32IPm3tZRcn88uGGEWxxmvC+rmR5
fo8AWvJkRDhhiOjC09/CiuVBISMqd+qcBkytp9XtdWQxMSe8az5TE79OKBAW
GDb+Z/drruNEO1U0cdSWolUMhKcpFhPznGS6vupJOwUzTky5jg92MKsjS9I0
0ShFGNyN1ZkqNwhkPuHQa8XHaKRwL3owpSeahMPHwuvUJ8XJ9J8dIlvqt2yc
m92Woo3KwZJwt/jUOGVtQJ43rHd77izPQh5Pjda0y9hK4MxBQ+N/xfrQuKFp
9uWXNJjWZH+ElYiB87eCOd1LZSyH+Hs1f1Mmr2taLpfr+qqNhornlXtDxeD9
6y2k02XI9Adh1px1t2SRIPZeklecF5UnTLPeLKvC5lOJFv8nBfRQ7H2h/FwY
7zlPz98Q54Eml5H0jhfyEG9022epJv9fuH2d1NtV/5QFQW5qZcOXmMn0Y8tG
LvfCqKApiIUbL7j/a53UiZV7SXtowTqdlLoYuo530esTs2EzhDdjb5z5OhXJ
/MXFbBbO8ZJI21nNrGylBN+O2JocdkpUKpcufpDewCu9YCEid4gNv8oOxbl8
mCDodAc/nDlEg2cvluWFRA0hcp+Ga+UEOxg7E6YrLZhxltsQowQq8nolGa6X
DNraOOixayE+XYo8/zaxJrF3VRzjXz8am6nyQkUyvbqVKLFh393HVY3Vqtj5
Q+SL5HUJGDo1bPOdVoF7Sbgv3y8JyFUav2cvVYGCptTje+dZkf7E/0j+qBh+
Eppt6pOEyXLiLwVJChqxIjbQy0ZvShCHDvts4hJnINNr20sW0l6wk8fdMcV+
Xf4EsPZfvrI/XQt/esc9/xza8Mt+LoUPfS385PHOGLuSelcFHBDrjpLj5SHP
T6UVUV7mVSKPGQR3kErsRSHe9sNjxE0J9DHXGsdSVJEVajtPl6oDOrUutjIO
ETI/6aWf/3C3Kt6qird6Oogi0L56VcVTk0wP8xhjv+TJD45jH/M4xhWx1yI1
ZqvPuvzz6U9veskjyTp4TwWvIk6ydeeFUOvATopm//nvxv93/Xp83vmQeZnB
GTR63oHhISS8Xyl5z0d0INM7dfvM45WdsCMnj4Lxwcb83fbmT2x3bTAWIZyu
522HbdeK/9WHk8j06zWfCt44OaBUxYVVnMMBrXNHX5/d5EymN0qUH3hNJOGf
8h2xE7HW6Pn4om8xxww8JEc1ixAzLF1mLr+0XQuRLccPPaQ3JO9X2M3G8/aq
PGRMkgae3rSDDt/2BfU1G3QI07HRSlvgR/MDnTxzDZAE3L2p/umA/8hxfW1N
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
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9511528569034853`*^9, 3.9511536590470448`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"e303b6ed-cb10-4da6-b7b3-f92fe76f9f67"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
6FfiqZ19gx63rfmG26ekHyTtS8zPR/u4f8MPVJyQ+xaTu7Gfj7uyG/s2YHkv
x/xjb3OcSksT+WQ+J/uVeSjwMm7IuIJ1HRtXPP/EfpYUZ2QcQtyRcUji5bpl
89bq4kRSHNH4xaHFa7m7w8j8J8UpRd93T4vxw0P/EfB5XRHw/mP60XKfj/Ix
P2uNxk3Asu4j8zx2Tjrdz+NWDB3bb6dDHk/mBTweePs3qxOsdvFf7tNsX1vt
1iOrO4y6/Y31t/cWC7P8e7UbF9gFeVgPgLEeWJwouXMcP7e4vJnVgQr9lo/V
cza6OhJgti4Kbn5kHUXqjfmAfOgDmOmDuF5y65rFPU8OxpHtO9AH89vmYBZf
tuA8OyjqZAMWRhxm9Q/kLXtvsS3LI9t6bNxn4z4dRuom4GfxwLOT5VdqvOW+
wOLNxn6e33rzw+JbwcmFfvKcy86hG11dAvzQF+PH4+wgP8+XBiP+y+oF1W5x
T7fEjg+7b5kO+brG+Rd22vi7RJxnl3j6mfMRzp04p+LcinMpzqk4twKPc67j
M+csyMU5CucqnLPcucvpdV6Kn/ffbZ5/323En+/97/55/rwUP5ef5/Uj8TQP
w2OmblOaMnF8b4fhnz9nuYVpfneuXG7pwJdEB9ivn/jykc/BD3x+xAOfXuJ9
/yFY1nclHnLQgs6v6xE9Wn+85l8THR+aj5d39lqYxvO1I258wJdE549DOGXm
7+j55r64/Z2ixdP4jTfng/CgAx79yfti317U5Xz7/PP23g52Trf39ISnfary
IacPLecdL7n+R9ObvnrH26WeA5WxJ85PGTlrLspaeodf/6e7Lsj2hNWVt77T
WGb5qJ+J4yVLT/zBwqyV7/oxdNCf6LN3mvhw5sXeyHhKPYgu9eECrb9vnX+a
9qPaH7xh1mvfO3MonpZPXq7Xw/p1F+r1sufIrNMlO+7QA+Pvz8+xVWFkvuQ8
YdwkH74T/sqHA/vdH3fC+3RkN8YBdoHP9zN/XIj/4CPLbevmfe7MuQatp7kb
zv6CzgubZmZdVupRweZrFFdOjO/5FMWJltSh2vxraL2ub3tP0QE/mj7V1pKi
9XnqgdbL6D6mp/zakaL9jngTt34onvnrheh8/e1+Pdgbwftyjv18mW0nKvfX
Cguz1i7YsbZ++gdPX1Kw+AOVGye3vr+o8LeVD3w+tHjYozaPrpGf5Sy/8oeu
nVnar+e1lfbmrH070o/Xer8QWL6W1K6Z472un0J1Y3lfqWhhsrN3alnEPuDR
+vH+QAeP5wTHxXMfD9jfL3r1uvn8J1MpWhdnu1bvzupxuepxiitjN5zT++DU
Aw+tKFl4R3rOR165jeLSyh+SfcfGOzbcvTtr4UXhF77eaFD+0zo56vE5OfPa
nt7i8BOV8j/MTvXpdn2Z5EzP5NY5eYVq7a4zetxqd22qlaz8pyqF8oEtFC8e
/unmGsWBVb9r9tXRmeOrsp5dppX40fSBrpHNdI5Tem307Tn+QOuHe20/x2lc
7i9avkXhwg1nXyxExs31Y+QkjRP8kvahicvdODm71H7w8+Z+83qew5+J6tGS
GqkVng09vJHTTnI35iws7WpJbSvvuymwfJADvLOf64Fxc/1V87NNvXjiul/q
uLP/jImjwQuXkL+Wd7xxR2DxKs7ec/mu0PIBr+iOvnlkuc6Xnt/Za/Ggo3zp
0mtMvrR4uBDHr/tBvzH8ul/oCTz6Bb2nv9bDs0/3Cz2AR5yU8QXxEfFPxk/E
TdABr/oP3tTxqau2+PUijyNKDuIq8IXqytq9B118nqiMlR/MRuNxgeLXwZLV
U8ZFxCnIKah1uLdE90+XTI5mo/FQ8+/NefHexD23f5g4irgJuvZwcHL4YOCN
g4nD6BdxGHJYHWuLu8cCzPb/qYDtg2fuCGydj91XnnTv8AhcN5azfER38JJe
BifxEQy6JDk476N+yN7zrQv5ftzhYOpn9i5Xj0C9EPyA/bzswZUOpnWbNX6u
+/lNesT168ulfn6THnH9srzeq4PGzWPcvMn81L8fJZjVTVN8HCnvZfl1M96m
B3IROsS5tfVFbWbfM/UV1DHZufhHLu/V54VvOFjr8dNiRE+sZxVPyu9/qWj3
V+wLfh3A5D1qn5rr4jn0de88zb6p+Gsn5jbn8X/NeM7/HZe3s7qnOveyOtdz
vdyPDy3l7wpi6ADLdx6snnWbe0cLmNXTbnT3x4DlOwDJJ+Wye5UYuaw+97h7
LyzrqUl08t4fdXBWd7vexQHs58qfatU33Tph9/+jfbbuye4Hn3frQr6Hlvey
7J3v6mWWH3Vapt9on62/yncTqAuDjt1Te/yoy7J7ldXu/ob5lxoPXXd6x8Gs
Drja3S+ycb6p+T7rmeY8LHD1UMQJeS+i7T3/Fms/u39FXVnZA32gL2Dwwz7A
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
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
CuuS3/W6WXU20/pEvtyjdcu3aeSBJ+Q7UOovp3L3KJ7wXaqHfjVVPeyBpuon
GP6Izi/qaKJ6+KaM3yHCJoJvXrEB4O6/lcLcZZOO7QTzgY+dBBwIZxVh7sfJ
Sxn4kIEqT1m+neR7SOww2beEsU9+XHVSN99Ekq++9mkz7d/7lUb+NspDuIXK
0i7fUpKHbyj5No155rscvoVsqznn20i+ec74vbbEv8M/nXLZ0U55yEsYu1O+
0ScPv4Vwu9ZVV9VNPurj3rzjBWumk9YeOkNXvRfs7btonlkjnbVOsIXtoD68
rnzk6ah6qJP32VXr5E7V01h9p2yidrpdsAa6aR0wVr79TH/T/ZDCjK2n+s+3
53xDip0n+L5Hkvn7eD0Un37mvfANNOsD2xD0t16aK34/oY/6U1/18h1r+ttp
bFbRqbDFb6L2e6k/vVWWPPlUNuO7TpXN+M04rcOWyttX+bEV5vtZ3v/YxH8/
h/UAh04YW3r4U76vbCh/gNYPOJ4w6eQdrLLgLcLUAe7BngOOl286H9Z65vel
Hte6TaeVUB+IJ3184v0eovBQlaX/w5LM374jnXmir5RbqfU5TPPJb0rw2xbY
8COHsFXiXmyW5BLh0Ypnb5KXMny3CJ8+UmWJI5xVcSMU31x9PqPwaNWDLRB2
P8gBfJ7Z19xlY1vAHdl9iifPKJXtpvQxysP3ofSJ38zorzRsEsAA2PzBmdD+
WPWB3zvjt/j47VvebX+9r/s0n8zhIOUfqPkdp7UxTnNNHn73jN/Rw2YDucZv
57VP6W98JP67AYT5TT/aRH70U1vETVYefjuNuviWjvqoh7MA25EnlGeS2qJ+
fjNzsvo/VP0ZovQJysPv0NEH8mb8Lmzif3uDcfM7cfxG3DMpj8v4212Bx6fn
ZlqS+TfJCJOX32bjN+Po1yzVNVt1ZPz+rMY1VfWwr/hNxnRfpmgsGX/DRGX5
myCzFKafMxV+SvHT5GaqD/hzNJb/A8oRO24=
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
QXSsVrj1/LVFLU6998nz9CvEqNx8D8FH/RCmq8z/s5uG1MBHWlVkz8zZru1S
ajOAyMU1d2buN+By0WyjOeFpq/tjZnaPjsO3PoScIH7GtWid3EfOXfCpsvsh
OXeR6/OOJeRefaUHT8+hZ+NYlU14GLnXrZvSq/TJuW5yFWXl/oXQ2q9//zQ5
d/nzu9WDFdVYe2WfgJttDcbjfHYqyAxCS0+0fnQ+DXsDt7X9vtgC0xc8c63/
DEImPp1rmW0LdtyP+VJM4sY2PbBZjvBH1XYWCOnTsMvL2dKD+G8t5N2eRvx/
+ErU1HgBDXvU+LZKOLZAw5vvtQHhifOWPSVVVgsRsaS9o/k98N3XNcLeM4CB
8KzByItN+BoT72ElTuYb68SlM6fpMNZa+3ONfRPcUvYn3Ce4sPR+5zCC7363
aspuXg86xlc7nXViwjZ6/XTUhjZ4+r6/LSNA5vtN9d0BMUycWiOqeOtTLcxP
6P22EGbicvIW+z3RTPA7RytzpdZCriGnwESaiV07zhx495IJ7s6dRjFxtSiR
iHNOW8TE7+Jf4dKvmVByEFgbkVEL1nVD1z8/unFN3uGqvgMTpqNTQiX6bfhg
1HRBzaoJmu9FGsNFyD5bctDx3QU6Nh25Vlh3ugkc9SmKMqIMbE3dpepgR0fb
Kt43tSW16Ak4UWOS14OQd2s+f987gISyVOYkFw2rluZfumzTghNHRAJTSdze
f3WfhQEN1h/ez+ydKUdkruP2D9YD2D3TLpJN3j20QHGijbzLg3HDV3vJu7xY
fYa7j/BoznmY+Me6BYI8/JMZhIce4LdBr5LMXRr9zYxzNQj2qPG7Kz2Il0yP
rYWnahH76qeN5+1CrDyjVyUW0Y8Xtbs6Esi7X5qMr3xD+LPXes+h9/die8e9
bJW/eagkWnKE5OHogMOWWJKH9ift34SRvBXPXrHCleRtfoFjli/J25W5BzY4
Ef+b9C9vevanHI5D+uE+xP+EggueYeRc/33HBRXuFOJbndoWPXKuS+yfUvOQ
Bvyxe/DegPBULwxapkJ4vMStRG6Sc797XJHcRc4NP7+t4g45V2pdE52H1KkR
3lW0kzptuh+ZvZLU6RXxl97qxD57xau1f/2cOXR60Vtif3Jd5k8ucq8/iy58
Kif3GmLaTyiRuJ1/3lKwl+AX7+lZZBM8t2LRIn6Cd9m/jfAiPI9nVXv/nnt0
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
jqAvjG975ldijvSaBCEVNipU+PoVV9MR138466twJeQOtGkaEns3l996OiJk
PomZv86H2Lt6CfsxCL5OwTC3QYiOl/t/UbdyVaLT+5SI7zqyj/dOfvfaQEf6
NRlNH8lKRI2ru4uTd4+fr7Gbl+TJmUdOMktJnpydzVVZwmbBu6LcbU4pqY9H
1KoDcZWwfU3fOZfEgXvBpJemTC+qhm5qrzEph0FExWz5EAsFNIWlv8vpiD7u
r8/9vhJbtkU4PSb2Gx8eSmma7IHbr81r4lTLETAW0EJvJ/Oe/f3pptvdZB53
26ayrAy7zBo2hBKcL8LRxP1pN57GW1vZKZbhR8H+iDmdZM8Sa3rL3NQNK73H
Yq3tpUjT0B+t6mBjj97bicId3dgxT+6SDbMUz0awiJvYP/3tPCa7sRv380ps
b7SV4he/L5tO7EN1rp3P29qNx2MSt+p6S2H8pKrQgMyrJwKtG7VNSX6u0s5d
srUS0dY5z+plyHyyIlNzeA8dRpn2K25sqsQKG+4w4wWDWK5xMnXxWiZWaXQO
XeGuwfnv8grdL1nYKyHsn+LGgGTgvW0KBlWwSXu6KKKZhcw/qUcSJ+i4G5bM
O1RL9Nz54jblKhaiX12oFFzMAJ1vS6T0IKmjucV/xrPZ+LZvi4VsVy9GrrwI
3cQqh3VqXHhMEdn7ZjZ1XyzpxUEO05P+jeUQGOl1jCN7hz2X5wVVXwZYlJLg
edZVKBYvfKBN5tXV57R+CS2nY9GVUpmvvJVQrmwrZ5K6NmttkL4rTUdylIwr
c3ElTrSvfBH/iIW1ebwcKZ4M2MTXzkk/WAVbU5l3TGU2JHqXXnpA8pBRZd2y
X6QS2hxJcU1FLIyPfB0xlGbAeXtgHm2qEld2WHyvzWShxKN80bUtDOzcuHnX
VcEqrG1reyOfPQDn9CDRxVuZCHK9mdOhXwPeQAvXJy0sXD20du6+H3Qw2yz5
82gkzprSuu7DZG/q3Xf5E5WON0MznKZvKsEyHp4TvpmNIWXeoC4Bkm+HoBI9
h8RTYqtUFsm3mVUd5ZEjJN/si8/FKJXD/Jre4G45om+rniqs30nHkf3zr+5U
qcTMdMkpdx02Yjbu4pLgpUP9lKPZlekKKN17UzqlxcZlPz0YC5J6XCv+7dvc
SnwobGsB2a/ntZZY3telI8I9Rn/JukqslXvSaUL8maU8mb22hA5+16EQVWI/
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
A96hONChn3W0A0t5W7+AkVGz+/RCI7xyYbwresuCQ1w+bZJjQxC+pLbd5GcL
cNhfpH/fw4I7b7dYLxp1gbOY1PhKmTpwvSC9eZzGhF1K/DmFS22Q3u1nunS2
Bpr3FFI5a5jwns6zymG+Ga5Gpq0zKq4GrVq/TuJ7kn/Z5jIbOjqhZJ9JVcbP
WtgsFcTGP8iEbHmZk6RI9JMVvLDSuAZYvLG7zaqYEJw682i2rhmMkkdnfuVX
ww2u9ZUD+1hgbOO+7k9qF0QIXnDX0K6DYuFM24cTTEg3fyFEEiBDze89ln9S
auBCpJLSiiYm3A+KzeIvbYFTu2U//OqoBp1LZVL9y1nweu/DnXUOFNCbux4v
zFsLRUPa430tTOA+5Pr1OQ8JePZufH1pqBpe2R6P+fKSCd5vhQ+p5jbCM77+
2FD9avhmtPtALpkJcRJ+ZPtcEnDdfs6bt1CNc3xmxYciJs6n27koXxpBNHrE
ptqkGnZdjjwg/o0F+907gsVHBuBWh1ijzfVGMK5givFXMCHF80fjsoPNMC52
uOV1QjXI5n3JLctlwvPLp/xZug1wrnJA5P7aauBbNSbiin1/p+3VT0JOn+Bk
UVjTBKsBjsqKxIAtC/I5jfdWGHaD3Oe81Wcn66DUNmDNzi8scA8p2Ga7bRBm
DgeYxnQ0wYlz5bm/D7Pg00/qb3NWFzzK/PXKyrEO5rTKFRf/MaEu+oPwmt0U
2CKxm9/3Xw2I2Gnen8D1KShzrOVbT4Jza74f/IbrkzkbVWK4iQU9G/UXH1V1
wIkn37f23awFX3mFEzZMJngIi0nnMNpB7dsg431sDfhMSGRpvGfCtrO775nJ
NMNi5dRVrtvVUJE6ymWOdeOrWhbLcU8nHNt/YeXUm1p4W/dQcdN3JvhVXpcT
ViTDDa0bdltyamDBRfrrww9MoHEFZXR5N0Or9dHtfCnVYBvb/ejQVhYIhMV8
sdrWCcGOv/d4F9dCN6/W7JMpJuRdLWlVPkWG1fbKHjJFNaAoYBclVsmEAwt9
nxuuNcML0V6rz6nVcMr7h5eFFAuuuigI+Rh3QunlN03bqmvBf1GXr+wHE65s
39kRqEsGx9TRN8ue10C4ZMHa7atYMJhXsSYpiQIubhadmltrwWaR8lxglAkv
Uq6KSYa2Q+INIcP2wBooohvO8Jcw4bDNytz7a5qAEsw5ve5MNawiXe51LWbC
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
jeIfah0bGYeCykDXlWwjEPg0NKvKqB3+D1NycZU=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             RasterBox[CompressedData["
1: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
/wE5WLt3
              "], {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -112.5}, 
                    Offset[{4., 0}, {7.5, -112.5}]}, {{7.5, -67.5}, 
                    Offset[{4., 0}, {7.5, -67.5}]}, {{7.5, -22.5}, 
                    Offset[{4., 0}, {7.5, -22.5}]}, {{7.5, 22.5}, 
                    Offset[{4., 0}, {7.5, 22.5}]}, {{7.5, 67.5}, 
                    Offset[{4., 0}, {7.5, 67.5}]}, {{7.5, 112.5}, 
                    Offset[{4., 0}, {7.5, 112.5}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{7.5, -101.25}, 
                    Offset[{2.5, 0.}, {7.5, -101.25}]}, {{7.5, -90.}, 
                    Offset[{2.5, 0.}, {7.5, -90.}]}, {{7.5, -78.75}, 
                    Offset[{2.5, 0.}, {7.5, -78.75}]}, {{7.5, -56.25}, 
                    Offset[{2.5, 0.}, {7.5, -56.25}]}, {{7.5, -45.}, 
                    Offset[{2.5, 0.}, {7.5, -45.}]}, {{7.5, -33.75}, 
                    Offset[{2.5, 0.}, {7.5, -33.75}]}, {{7.5, -11.25}, 
                    Offset[{2.5, 0.}, {7.5, -11.25}]}, {{7.5, 0.}, 
                    Offset[{2.5, 0.}, {7.5, 0.}]}, {{7.5, 11.25}, 
                    Offset[{2.5, 0.}, {7.5, 11.25}]}, {{7.5, 33.75}, 
                    Offset[{2.5, 0.}, {7.5, 33.75}]}, {{7.5, 45.}, 
                    Offset[{2.5, 0.}, {7.5, 45.}]}, {{7.5, 56.25}, 
                    Offset[{2.5, 0.}, {7.5, 56.25}]}, {{7.5, 78.75}, 
                    Offset[{2.5, 0.}, {7.5, 78.75}]}, {{7.5, 90.}, 
                    Offset[{2.5, 0.}, {7.5, 90.}]}, {{7.5, 101.25}, 
                    Offset[{2.5, 0.}, {7.5, 101.25}]}}], {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["60", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 22.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["80", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 67.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["100", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 112.5}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.5], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.5], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"Rainbow\"", ",", "#1"}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"-", "5.801030638738462`*^-15"}], ",", 
                   "99.99930701878131`"}], "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9511528569034853`*^9, 3.951153659166136*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"8749b882-aca2-4a56-b990-47e98d0996ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1"}], "}"}]}], "]"}], " ", "/.", " ", 
  RowBox[{"x", "->", "1"}]}]], "Input",
 CellChangeTimes->{{3.951159568073351*^9, 3.951159580996052*^9}, {
  3.951159614015703*^9, 3.951159620976727*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"c571810d-ffc4-46cb-9a3e-4a8402c9859a"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["f", 
   TagBox[
    RowBox[{"(", 
     RowBox[{"1", ",", "0"}], ")"}],
    Derivative],
   MultilineFunction->None], "[", 
  RowBox[{"1", ",", "y"}], "]"}]], "Output",
 CellChangeTimes->{3.9511595828085833`*^9, 3.951159621626029*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"6b67a97f-fa9e-4ece-b8bd-f5a67d3611ac"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"14.2 for Mac OS X ARM (64-bit) (December 26, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"ac66df5d-3968-4cbb-8e23-f4d886fcc29b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 344, 9, 29, "Input",ExpressionUUID->"bbc40e93-84e7-46c4-adf3-00300a45c6ae"],
Cell[923, 33, 397, 10, 33, "Output",ExpressionUUID->"ae36c679-2ccf-4bfe-af14-caa0f8ff02e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357, 48, 483, 12, 29, "Input",ExpressionUUID->"0027f721-3fe9-49dd-931b-13fac63a0186"],
Cell[1843, 62, 675, 21, 33, "Output",ExpressionUUID->"a81a6e41-8366-44de-9f1c-e474cf86b536"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2555, 88, 1345, 35, 29, "Input",ExpressionUUID->"8d54f2e8-ec6f-40fe-882d-47a4a0494dfd"],
Cell[3903, 125, 1011, 30, 35, "Output",ExpressionUUID->"6540a261-dcce-4f54-84f7-04bf2fdc9733"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4951, 160, 551, 14, 29, "Input",ExpressionUUID->"45df754a-815b-4e19-95f5-79ae8019b979"],
Cell[5505, 176, 2885, 94, 39, "Output",ExpressionUUID->"899b1660-2b15-4604-aacf-56436baf473e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8427, 275, 2791, 77, 192, "Input",ExpressionUUID->"30e99efe-e77f-488f-948e-ecfba9baf28d"],
Cell[11221, 354, 4435, 111, 62, "Output",ExpressionUUID->"8bea8127-41de-400d-9348-f5bda6b5fcf8"],
Cell[15659, 467, 4140, 107, 62, "Output",ExpressionUUID->"ab5958d8-d1ea-40db-901b-e9d023eb5906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19836, 579, 1135, 30, 90, "Input",ExpressionUUID->"7c34c85a-f8ce-4941-b0e8-0eebb91c0bd3"],
Cell[20974, 611, 300, 4, 33, "Output",ExpressionUUID->"8e09e682-2e1c-476f-bca2-439111996ff8"],
Cell[21277, 617, 368, 7, 46, "Output",ExpressionUUID->"52037a75-3e07-4311-adbb-af37e43d776d"],
Cell[21648, 626, 741, 19, 47, "Output",ExpressionUUID->"2e0f1197-7981-4b44-bdb7-e18be54db7fe"],
Cell[22392, 647, 355, 6, 33, "Output",ExpressionUUID->"c6d6df8d-ad11-46ed-a25e-de34095692c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22784, 658, 2978, 86, 192, "Input",ExpressionUUID->"2b140737-9e17-4d03-b8a4-0b8fefb683a5"],
Cell[25765, 746, 6172, 140, 137, "Output",ExpressionUUID->"b87e035c-9991-4e7e-b9e5-aeb075ea0fe9"],
Cell[31940, 888, 3740, 86, 66, "Output",ExpressionUUID->"c317331a-5d19-447a-a8e9-6ddd5aa14637"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35717, 979, 405, 9, 29, "Input",ExpressionUUID->"f5fdb0c3-5f53-4dd5-8b69-d7b41954d1d6"],
Cell[36125, 990, 153, 2, 33, "Output",ExpressionUUID->"3ab44587-e7a5-4ca0-98a2-a92a1a0b47db"]
}, Open  ]],
Cell[36293, 995, 81, 0, 29, "Input",ExpressionUUID->"e914330b-f801-4da8-87a5-98730488f99c"],
Cell[CellGroupData[{
Cell[36399, 999, 3273, 93, 77, "Input",ExpressionUUID->"a5d1ea6c-52d8-44e9-82fc-b07df04d8155"],
Cell[39675, 1094, 1109, 37, 55, "Output",ExpressionUUID->"9d4a26db-d777-4767-8e5e-550715b8a2a3"],
Cell[40787, 1133, 720, 16, 26, "Message",ExpressionUUID->"8d89bdf5-271f-4fa8-b7a1-9fbff8b15e61"],
Cell[41510, 1151, 694, 15, 26, "Message",ExpressionUUID->"3f9ffa46-c6d9-49a1-a7d1-a68670a83da4"],
Cell[42207, 1168, 674, 15, 26, "Message",ExpressionUUID->"9479e808-e32d-4bda-a955-73b49b4c7393"],
Cell[42884, 1185, 542, 13, 26, "Message",ExpressionUUID->"9a2895a9-bee2-4b01-9817-3fd540f219b2"],
Cell[43429, 1200, 5062, 73, 42, "Message",ExpressionUUID->"08786fd6-bc05-4bf9-9718-759387d67d78"],
Cell[48494, 1275, 5302, 168, 103, "Output",ExpressionUUID->"03484d35-6940-49df-84b7-274024d83956"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53833, 1448, 2756, 78, 90, "Input",ExpressionUUID->"d2f6a73c-6705-4630-9376-914f7c29c037"],
Cell[56592, 1528, 54555, 935, 58, "Output",ExpressionUUID->"e303b6ed-cb10-4da6-b7b3-f92fe76f9f67"],
Cell[111150, 2465, 85826, 1458, 370, "Output",ExpressionUUID->"8749b882-aca2-4a56-b990-47e98d0996ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197013, 3928, 442, 11, 29, "Input",ExpressionUUID->"c571810d-ffc4-46cb-9a3e-4a8402c9859a"],
Cell[197458, 3941, 354, 10, 33, "Output",ExpressionUUID->"6b67a97f-fa9e-4ece-b8bd-f5a67d3611ac"]
}, Open  ]]
}
]
*)

